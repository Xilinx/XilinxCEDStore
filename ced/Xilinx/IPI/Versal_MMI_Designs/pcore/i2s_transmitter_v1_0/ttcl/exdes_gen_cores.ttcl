<: ;#Component and file information :>
<: set ComponentName [getComponentNameString] :>
<: setOutputDirectory [ttcl_string_concat "./" $ComponentName "/example_design"] :>
<: setFileName "exdes_gen_cores" :>
<: setFileExtension ".tcl" :>
<: set c_num_i2s_channels 		[getIntValue "C_NUM_CHANNELS"] :>
<: set c_tx_is_master 			[getIntValue "C_IS_MASTER"] :>
<: set c_data_width 			[getIntValue "C_DWIDTH"] :>
<: set c_32bit 			[getIntValue "C_32BIT_LR"] :>
<: set a [expr {$c_num_i2s_channels*2}] :>
<: set family [getProjectFamily] :>


<: if {([string first "everest" $family] == -1) && ([string first "versal" $family] == -1)} { :>

create_ip -name clk_wiz  -vendor xilinx.com -library ip -module_name clk_wiz_0
set_property -dict [list CONFIG.PRIM_SOURCE {Single_ended_clock_capable_pin} CONFIG.PRIM_IN_FREQ {100.000} CONFIG.CLKOUT2_USED {true} CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {36.846} CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {100.000}] [get_ips clk_wiz_0]
generate_target all [get_ips clk_wiz_0]

#create_ip -name clk_wiz  -vendor xilinx.com -library ip -module_name clk_wiz_1
#set_property -dict [list CONFIG.PRIM_SOURCE {Single_ended_clock_capable_pin} CONFIG.PRIM_IN_FREQ {100.000} CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {100.000}] [get_ips clk_wiz_1]
#generate_target all [get_ips clk_wiz_1]

<: } else { :>
create_ip -name clk_wizard -vendor xilinx.com -library ip -module_name clk_wiz_0
set_property -dict [list CONFIG.USE_RESET {true} CONFIG.USE_LOCKED {true} CONFIG.PRIM_IN_FREQ {100.000} CONFIG.PRIM_SOURCE {Single_ended_clock_capable_pin} CONFIG.CLKOUT_USED {true,true,false,false,false,false,false} CONFIG.CLKOUT_PORT {clk_out1,clk_out2,clk_out3,clk_out4,clk_out5,clk_out6,clk_out7} CONFIG.CLKOUT_REQUESTED_OUT_FREQUENCY {36.846,100.000,60.000,100.000,100.000,100.000,100.000}] [get_ips clk_wiz_0]
generate_target all [get_ips clk_wiz_0]


#create_ip -name clk_wizard -vendor xilinx.com -library ip -module_name clk_wiz_1
#set_property -dict [list CONFIG.USE_RESET {true} CONFIG.USE_LOCKED {true} CONFIG.PRIM_IN_FREQ {100.000} CONFIG.PRIM_SOURCE {Single_ended_clock_capable_pin} CONFIG.CLKOUT_USED {true,false,false,false,false,false,false} CONFIG.CLKOUT_PORT {clk_out1,clk_out2,clk_out3,clk_out4,clk_out5,clk_out6,clk_out7} CONFIG.CLKOUT_REQUESTED_OUT_FREQUENCY {100.000,50.000,60.000,100.000,100.000,100.000,100.000}] [get_ips clk_wiz_1]
#generate_target all [get_ips clk_wiz_1]

<: } :>

<: if {$c_tx_is_master == 1} { :>

create_ip -name i2s_receiver -vendor xilinx.com -library ip -module_name i2s_receiver_1
set_property -dict [list CONFIG.C_IS_MASTER {1} CONFIG.C_NUM_CHANNELS {<=: $a :>} CONFIG.C_DWIDTH {<=: $c_data_width :>} CONFIG.C_32BIT_LR {<=: $c_32bit :>}] [get_ips i2s_receiver_1]
generate_target all [get_ips i2s_receiver_1]

<: } else { :>

create_ip -name i2s_receiver -vendor xilinx.com -library ip -module_name i2s_receiver_1
set_property -dict [list CONFIG.C_IS_MASTER {1} CONFIG.C_NUM_CHANNELS {<=: $a :>} CONFIG.C_DWIDTH {<=: $c_data_width :>} CONFIG.C_32BIT_LR {<=: $c_32bit :>}] [get_ips i2s_receiver_1]
generate_target all [get_ips i2s_receiver_1]

<: } :>

create_ip -name axi_traffic_gen -vendor xilinx.com -library ip -module_name axi_traffic_gen_0
set coe1 [lindex [get_property name [get_files *atg_addr.coe]] 0 ]
set coe2 [lindex [get_property name [get_files *atg_mask.coe]] 0 ]
set coe3 [lindex [get_property name [get_files *atg_ctrl.coe]] 0 ]
set coe4 [lindex [get_property name [get_files *atg_data.coe]] 0 ]
set_property -dict [list CONFIG.C_ATG_MODE {AXI4-Lite} CONFIG.C_ATG_SYSINIT_MODES {System_Test} CONFIG.C_ATG_MIF_DATA_DEPTH {16} CONFIG.C_ATG_SYSTEM_TEST_MAX_CLKS {2147483647} CONFIG.C_ATG_SYSTEM_CMD_MAX_RETRY {2147483647} CONFIG.C_ATG_SYSTEM_INIT_ADDR_MIF $coe1 CONFIG.C_ATG_SYSTEM_INIT_MASK_MIF $coe2 CONFIG.C_ATG_SYSTEM_INIT_CTRL_MIF $coe3 CONFIG.C_ATG_SYSTEM_INIT_DATA_MIF $coe4] [get_ips axi_traffic_gen_0]
#generate_target {instantiation_template} [get_ips axi_traffic_gen_0]
generate_target all [get_ips axi_traffic_gen_0]


create_ip -name axi_traffic_gen -vendor xilinx.com -library ip -module_name axi_traffic_gen_1
set coe1 [lindex [get_property name [get_files *atg_addr1.coe]] 0 ]
set coe2 [lindex [get_property name [get_files *atg_mask1.coe]] 0 ]
set coe3 [lindex [get_property name [get_files *atg_ctrl1.coe]] 0 ]
set coe4 [lindex [get_property name [get_files *atg_data1.coe]] 0 ]
set_property -dict [list CONFIG.C_ATG_MODE {AXI4-Lite} CONFIG.C_ATG_SYSINIT_MODES {System_Test} CONFIG.C_ATG_MIF_DATA_DEPTH {16} CONFIG.C_ATG_SYSTEM_TEST_MAX_CLKS {2147483647} CONFIG.C_ATG_SYSTEM_CMD_MAX_RETRY {2147483647} CONFIG.C_ATG_SYSTEM_INIT_ADDR_MIF $coe1 CONFIG.C_ATG_SYSTEM_INIT_MASK_MIF $coe2 CONFIG.C_ATG_SYSTEM_INIT_CTRL_MIF $coe3 CONFIG.C_ATG_SYSTEM_INIT_DATA_MIF $coe4] [get_ips axi_traffic_gen_1]
#generate_target {instantiation_template} [get_ips axi_traffic_gen_1]
generate_target all [get_ips axi_traffic_gen_1]


set_property top <=:$ComponentName:>_exdes [current_fileset]
update_compile_order -fileset sources_1
set_property top <=:$ComponentName:>_tb_top [get_filesets sim_1]
update_compile_order -fileset sim_1


<: set CompName [getComponentNameString] :>
<: setOutputDirectory "./" :>
<: setFileExtension ".xdc" :>
<: setFileProcessingOrder early:>

# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.


 set_false_path -to [get_pins -hier {*syncstages_ff_reg[0]/D}]



################################################################################
# From the AXI lite clock to the Audio clock
################################################################################
set_false_path -from [get_cells -hier -filter name=~*AUD_RST_CLK_CROSS_INST/rIn_Toggle_reg] \
               -to   [get_cells -hier -filter name=~*AUD_RST_CLK_CROSS_INST/rOut_Sync_reg[0]]

set_false_path -from [get_cells -hier -filter name=~*AUD_CFGUPD_CLK_CROSS_INST/rIn_Toggle_reg] \
               -to   [get_cells -hier -filter name=~*AUD_CFGUPD_CLK_CROSS_INST/rOut_Sync_reg[0]]
               
               
################################################################################               
# From the AXI lite clock to the AXI streaming clock
################################################################################
set_false_path -to   [get_cells -hier -filter name=~*_sync_reg[*]]

#set_false_path -to   [get_pins -hier -filter name=~*/audio_sample*_reg[*]/D]
set_false_path -to   [get_pins -filter {REF_PIN_NAME=~ D} -of_objects [get_cells -hierarchical -filter {NAME=~ */audio_sample*_reg[*]}]]

#set_false_path -to   [get_pins -hier -filter name=~*/channel_status_reg[*]/D]
set_false_path -to   [get_pins -filter {REF_PIN_NAME=~ D} -of_objects [get_cells -hierarchical -filter {NAME=~ */channel_status_reg[*]}]]

#set_false_path -to   [get_pins -hier -filter name=~*/ch_en_reg[*]/D]
set_false_path -to   [get_pins -filter {REF_PIN_NAME=~ D} -of_objects [get_cells -hierarchical -filter {NAME=~ */ch_en_reg[*]}]]

#set_false_path -to   [get_pins -hier -filter name=~*/ping_pattern_ch*_reg[*]/CE]
set_false_path -to   [get_pins -filter {REF_PIN_NAME=~ CE} -of_objects [get_cells -hierarchical -filter {NAME=~ */ping_pattern_ch*_reg[*]}]]
                               
#set_false_path -to   [get_pins  -hier -filter name=~*/cntr_250ms_ch*_reg[*]/D]
set_false_path -to   [get_pins -filter {REF_PIN_NAME=~ D} -of_objects [get_cells -hierarchical -filter {NAME=~ */cntr_250ms_ch*_reg[*]}]]

create_waiver -scope -internal -quiet -user av_pat_gen -type CDC -id CDC-11 -description "waiving off" \
-from [get_pins -quiet -filter {REF_PIN_NAME=~*C} -of_objects [get_cells -hierarchical -filter {NAME =~*slv_reg_0x400_reg[*]}]] \
-to   [get_pins -quiet -filter {REF_PIN_NAME=~*D} -of_objects [get_cells -hierarchical -filter {NAME =~*start_sync_reg[*]}]]

create_waiver -scope -internal -quiet -user av_pat_gen -type CDC -id CDC-1 -description "waiving off" \
-from [get_pins -quiet -filter {REF_PIN_NAME=~*C} -of_objects [get_cells -hierarchical -filter {NAME =~*slv_reg_0x4B8_reg[*]}]] \
-to   [get_pins -quiet -filter {REF_PIN_NAME=~*D} -of_objects [get_cells -hierarchical -filter {NAME =~*audio_stream_id_sync_reg[*]}]]

create_waiver -scope -internal -quiet -user av_pat_gen -type CDC -id CDC-1 -description "waiving off" \
-from [get_pins -quiet -filter {REF_PIN_NAME=~*C} -of_objects [get_cells -hierarchical -filter {NAME =~*slv_reg_0x404_reg[*]}]] \
-to   [get_pins -quiet -filter {REF_PIN_NAME=~*CE} -of_objects [get_cells -hierarchical -filter {NAME =~*ping_pattern_ch1_reg[*]}]]


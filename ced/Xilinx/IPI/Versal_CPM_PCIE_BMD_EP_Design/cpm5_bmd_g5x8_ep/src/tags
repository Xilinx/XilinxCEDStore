!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AXI4_CC_TUSER_WIDTH	BMD_AXIST_1024.sv	/^   parameter         AXI4_CC_TUSER_WIDTH              = 165,$/;"	a
AXI4_CC_TUSER_WIDTH	BMD_AXIST_CC_512.sv	/^   parameter         AXI4_CC_TUSER_WIDTH           = 81,$/;"	a
AXI4_CC_TUSER_WIDTH	BMD_AXIST_CQ_512.sv	/^   parameter         AXI4_CC_TUSER_WIDTH           = 81,$/;"	a
AXI4_CC_TUSER_WIDTH	BMD_AXIST_EP_1024.sv	/^   parameter         AXI4_CC_TUSER_WIDTH              = 165,$/;"	a
AXI4_CC_TUSER_WIDTH	BMD_AXIST_RQ_1024.sv	/^  ,parameter         AXI4_CC_TUSER_WIDTH           = 81$/;"	a
AXI4_CC_TUSER_WIDTH	design_1_wrapper.v	/^   parameter         AXI4_CC_TUSER_WIDTH            = 165;$/;"	a
AXI4_CC_TUSER_WIDTH	pcie_app_uscale_bmd_1024.sv	/^   parameter          AXI4_CC_TUSER_WIDTH            = 165,$/;"	a
AXI4_CQ_TUSER_WIDTH	BMD_AXIST_1024.sv	/^   parameter         AXI4_CQ_TUSER_WIDTH              = 465,$/;"	a
AXI4_CQ_TUSER_WIDTH	BMD_AXIST_CC_512.sv	/^   parameter         AXI4_CQ_TUSER_WIDTH           = 183,$/;"	a
AXI4_CQ_TUSER_WIDTH	BMD_AXIST_CQ_512.sv	/^   parameter         AXI4_CQ_TUSER_WIDTH           = 183,$/;"	a
AXI4_CQ_TUSER_WIDTH	BMD_AXIST_EP_1024.sv	/^   parameter         AXI4_CQ_TUSER_WIDTH              = 465,$/;"	a
AXI4_CQ_TUSER_WIDTH	BMD_AXIST_RQ_1024.sv	/^  ,parameter         AXI4_CQ_TUSER_WIDTH           = 183$/;"	a
AXI4_CQ_TUSER_WIDTH	design_1_wrapper.v	/^   parameter         AXI4_CQ_TUSER_WIDTH            = 465;$/;"	a
AXI4_CQ_TUSER_WIDTH	pcie_app_uscale_bmd_1024.sv	/^   parameter          AXI4_CQ_TUSER_WIDTH            = 465,$/;"	a
AXI4_RC_TUSER_WIDTH	BMD_AXIST_1024.sv	/^   parameter         AXI4_RC_TUSER_WIDTH              = 337,$/;"	a
AXI4_RC_TUSER_WIDTH	BMD_AXIST_CC_512.sv	/^   parameter         AXI4_RC_TUSER_WIDTH           = 161,$/;"	a
AXI4_RC_TUSER_WIDTH	BMD_AXIST_CQ_512.sv	/^   parameter         AXI4_RC_TUSER_WIDTH           = 161,$/;"	a
AXI4_RC_TUSER_WIDTH	BMD_AXIST_EP_1024.sv	/^   parameter         AXI4_RC_TUSER_WIDTH              = 337,$/;"	a
AXI4_RC_TUSER_WIDTH	BMD_AXIST_RC_1024.sv	/^   parameter         AXI4_RC_TUSER_WIDTH           = 161,$/;"	a
AXI4_RC_TUSER_WIDTH	BMD_AXIST_RQ_1024.sv	/^  ,parameter         AXI4_RC_TUSER_WIDTH           = 161$/;"	a
AXI4_RC_TUSER_WIDTH	design_1_wrapper.v	/^   parameter         AXI4_RC_TUSER_WIDTH            = 337;$/;"	a
AXI4_RC_TUSER_WIDTH	pcie_app_uscale_bmd_1024.sv	/^   parameter          AXI4_RC_TUSER_WIDTH            = 337,$/;"	a
AXI4_RQ_TUSER_WIDTH	BMD_AXIST_1024.sv	/^   parameter         AXI4_RQ_TUSER_WIDTH              = 373,$/;"	a
AXI4_RQ_TUSER_WIDTH	BMD_AXIST_CC_512.sv	/^   parameter         AXI4_RQ_TUSER_WIDTH           = 137,$/;"	a
AXI4_RQ_TUSER_WIDTH	BMD_AXIST_CQ_512.sv	/^   parameter         AXI4_RQ_TUSER_WIDTH           = 137,$/;"	a
AXI4_RQ_TUSER_WIDTH	BMD_AXIST_EP_1024.sv	/^   parameter         AXI4_RQ_TUSER_WIDTH              = 373,$/;"	a
AXI4_RQ_TUSER_WIDTH	BMD_AXIST_RQ_1024.sv	/^  ,parameter         AXI4_RQ_TUSER_WIDTH           = 137$/;"	a
AXI4_RQ_TUSER_WIDTH	BMD_AXIST_RQ_RW_1024.sv	/^  ,parameter         AXI4_RQ_TUSER_WIDTH           =  137$/;"	a
AXI4_RQ_TUSER_WIDTH	design_1_wrapper.v	/^   parameter         AXI4_RQ_TUSER_WIDTH            = 373;$/;"	a
AXI4_RQ_TUSER_WIDTH	pcie_app_uscale_bmd_1024.sv	/^   parameter          AXI4_RQ_TUSER_WIDTH            = 373,$/;"	a
AXISTEN_IF_CC_STRADDLE	BMD_AXIST_1024.sv	/^   parameter         AXISTEN_IF_CC_STRADDLE           = 0,$/;"	a
AXISTEN_IF_CC_STRADDLE	BMD_AXIST_CC_512.sv	/^   parameter         AXISTEN_IF_CC_STRADDLE        = 0,$/;"	a
AXISTEN_IF_CC_STRADDLE	BMD_AXIST_EP_1024.sv	/^   parameter         AXISTEN_IF_CC_STRADDLE           = 0,$/;"	a
AXISTEN_IF_CC_STRADDLE	pcie_app_uscale_bmd_1024.sv	/^   parameter         AXISTEN_IF_CC_STRADDLE           = 0,$/;"	a
AXISTEN_IF_CMP_ALIGNMENT_MODE	BMD_AXIST_1024.sv	/^   parameter         AXISTEN_IF_CMP_ALIGNMENT_MODE    = 2'b00,$/;"	a
AXISTEN_IF_CMP_ALIGNMENT_MODE	BMD_AXIST_CC_512.sv	/^   parameter         AXISTEN_IF_CMP_ALIGNMENT_MODE = 0,$/;"	a
AXISTEN_IF_CMP_ALIGNMENT_MODE	BMD_AXIST_CQ_512.sv	/^   parameter         AXISTEN_IF_CMP_ALIGNMENT_MODE = 0,$/;"	a
AXISTEN_IF_CMP_ALIGNMENT_MODE	BMD_AXIST_EP_1024.sv	/^   parameter         AXISTEN_IF_CMP_ALIGNMENT_MODE    = 2'b00,$/;"	a
AXISTEN_IF_CMP_ALIGNMENT_MODE	pcie_app_uscale_bmd_1024.sv	/^   parameter         AXISTEN_IF_CMP_ALIGNMENT_MODE    = 2'b00,$/;"	a
AXISTEN_IF_CMP_PARITY_CHECK	BMD_AXIST_1024.sv	/^   parameter         AXISTEN_IF_CMP_PARITY_CHECK      = 0,$/;"	a
AXISTEN_IF_CMP_PARITY_CHECK	BMD_AXIST_CC_512.sv	/^   parameter         AXISTEN_IF_CMP_PARITY_CHECK   = 0,$/;"	a
AXISTEN_IF_CMP_PARITY_CHECK	BMD_AXIST_CQ_512.sv	/^   parameter         AXISTEN_IF_CMP_PARITY_CHECK   = 0,$/;"	a
AXISTEN_IF_CMP_PARITY_CHECK	BMD_AXIST_EP_1024.sv	/^   parameter         AXISTEN_IF_CMP_PARITY_CHECK      = 0,$/;"	a
AXISTEN_IF_CMP_PARITY_CHECK	pcie_app_uscale_bmd_1024.sv	/^   parameter         AXISTEN_IF_CMP_PARITY_CHECK      = 0,$/;"	a
AXISTEN_IF_CQ_STRADDLE	BMD_AXIST_1024.sv	/^   parameter         AXISTEN_IF_CQ_STRADDLE           = 0,$/;"	a
AXISTEN_IF_CQ_STRADDLE	BMD_AXIST_CQ_512.sv	/^   parameter         AXISTEN_IF_CQ_STRADDLE        = 0,$/;"	a
AXISTEN_IF_CQ_STRADDLE	BMD_AXIST_EP_1024.sv	/^   parameter         AXISTEN_IF_CQ_STRADDLE           = 0,$/;"	a
AXISTEN_IF_CQ_STRADDLE	pcie_app_uscale_bmd_1024.sv	/^   parameter         AXISTEN_IF_CQ_STRADDLE           = 0,$/;"	a
AXISTEN_IF_ENABLE_CLIENT_TAG	BMD_AXIST_1024.sv	/^   parameter         AXISTEN_IF_ENABLE_CLIENT_TAG     = 0,$/;"	a
AXISTEN_IF_ENABLE_CLIENT_TAG	BMD_AXIST_EP_1024.sv	/^   parameter         AXISTEN_IF_ENABLE_CLIENT_TAG     = 0,$/;"	a
AXISTEN_IF_ENABLE_CLIENT_TAG	BMD_AXIST_RC_1024.sv	/^   parameter         AXISTEN_IF_ENABLE_CLIENT_TAG  = 0,$/;"	a
AXISTEN_IF_ENABLE_CLIENT_TAG	BMD_AXIST_RQ_1024.sv	/^  ,parameter         AXISTEN_IF_ENABLE_CLIENT_TAG  = 0$/;"	a
AXISTEN_IF_ENABLE_CLIENT_TAG	pcie_app_uscale_bmd_1024.sv	/^   parameter         AXISTEN_IF_ENABLE_CLIENT_TAG     = 0,$/;"	a
AXISTEN_IF_ENABLE_MSG_ROUTE	BMD_AXIST_1024.sv	/^   parameter [17:0]  AXISTEN_IF_ENABLE_MSG_ROUTE      = 18'h2FFFF,$/;"	a
AXISTEN_IF_ENABLE_MSG_ROUTE	BMD_AXIST_EP_1024.sv	/^   parameter [17:0]  AXISTEN_IF_ENABLE_MSG_ROUTE      = 18'h2FFFF,$/;"	a
AXISTEN_IF_ENABLE_MSG_ROUTE	pcie_app_uscale_bmd_1024.sv	/^   parameter [17:0]  AXISTEN_IF_ENABLE_MSG_ROUTE      = 18'h2FFFF,$/;"	a
AXISTEN_IF_ENABLE_RX_MSG_INTFC	BMD_AXIST_1024.sv	/^   parameter         AXISTEN_IF_ENABLE_RX_MSG_INTFC   = 0,$/;"	a
AXISTEN_IF_ENABLE_RX_MSG_INTFC	BMD_AXIST_EP_1024.sv	/^   parameter         AXISTEN_IF_ENABLE_RX_MSG_INTFC   = 0,$/;"	a
AXISTEN_IF_ENABLE_RX_MSG_INTFC	pcie_app_uscale_bmd_1024.sv	/^   parameter         AXISTEN_IF_ENABLE_RX_MSG_INTFC   = 0,$/;"	a
AXISTEN_IF_RC_STRADDLE	BMD_AXIST_1024.sv	/^   parameter         AXISTEN_IF_RC_STRADDLE           = 0,$/;"	a
AXISTEN_IF_RC_STRADDLE	BMD_AXIST_EP_1024.sv	/^   parameter         AXISTEN_IF_RC_STRADDLE           = 0,$/;"	a
AXISTEN_IF_RC_STRADDLE	BMD_AXIST_RC_1024.sv	/^   parameter         AXISTEN_IF_RC_STRADDLE        = 2'b00,$/;"	a
AXISTEN_IF_RC_STRADDLE	pcie_app_uscale_bmd_1024.sv	/^   parameter         AXISTEN_IF_RC_STRADDLE           = 0,$/;"	a
AXISTEN_IF_REQ_ALIGNMENT_MODE	BMD_AXIST_1024.sv	/^   parameter         AXISTEN_IF_REQ_ALIGNMENT_MODE    = 2'b00,$/;"	a
AXISTEN_IF_REQ_ALIGNMENT_MODE	BMD_AXIST_EP_1024.sv	/^   parameter         AXISTEN_IF_REQ_ALIGNMENT_MODE    = 2'b00,$/;"	a
AXISTEN_IF_REQ_ALIGNMENT_MODE	BMD_AXIST_RC_1024.sv	/^   parameter         AXISTEN_IF_REQ_ALIGNMENT_MODE = 0,$/;"	a
AXISTEN_IF_REQ_ALIGNMENT_MODE	BMD_AXIST_RQ_1024.sv	/^   parameter         AXISTEN_IF_REQ_ALIGNMENT_MODE = 0$/;"	a
AXISTEN_IF_REQ_ALIGNMENT_MODE	BMD_AXIST_RQ_RW_1024.sv	/^   parameter         AXISTEN_IF_REQ_ALIGNMENT_MODE =    0$/;"	a
AXISTEN_IF_REQ_ALIGNMENT_MODE	pcie_app_uscale_bmd_1024.sv	/^   parameter         AXISTEN_IF_REQ_ALIGNMENT_MODE    = 2'b00,$/;"	a
AXISTEN_IF_REQ_PARITY_CHECK	BMD_AXIST_1024.sv	/^   parameter         AXISTEN_IF_REQ_PARITY_CHECK      = 0,$/;"	a
AXISTEN_IF_REQ_PARITY_CHECK	BMD_AXIST_EP_1024.sv	/^   parameter         AXISTEN_IF_REQ_PARITY_CHECK      = 0,$/;"	a
AXISTEN_IF_REQ_PARITY_CHECK	BMD_AXIST_RC_1024.sv	/^   parameter         AXISTEN_IF_REQ_PARITY_CHECK   = 0,$/;"	a
AXISTEN_IF_REQ_PARITY_CHECK	BMD_AXIST_RQ_1024.sv	/^  ,parameter         AXISTEN_IF_REQ_PARITY_CHECK   = 0$/;"	a
AXISTEN_IF_REQ_PARITY_CHECK	BMD_AXIST_RQ_RW_1024.sv	/^  ,parameter         AXISTEN_IF_REQ_PARITY_CHECK   =    0$/;"	a
AXISTEN_IF_REQ_PARITY_CHECK	pcie_app_uscale_bmd_1024.sv	/^   parameter         AXISTEN_IF_REQ_PARITY_CHECK      = 0,$/;"	a
AXISTEN_IF_RQ_STRADDLE	BMD_AXIST_1024.sv	/^   parameter         AXISTEN_IF_RQ_STRADDLE           = 0,$/;"	a
AXISTEN_IF_RQ_STRADDLE	BMD_AXIST_EP_1024.sv	/^   parameter         AXISTEN_IF_RQ_STRADDLE           = 0,$/;"	a
AXISTEN_IF_RQ_STRADDLE	BMD_AXIST_RQ_1024.sv	/^  ,parameter         AXISTEN_IF_RQ_STRADDLE        = 2'b10 \/\/00: max 1 packet, 01: max 2, 10: max 4, 11: rsvd$/;"	a
AXISTEN_IF_RQ_STRADDLE	BMD_AXIST_RQ_RW_1024.sv	/^  ,parameter         AXISTEN_IF_RQ_STRADDLE        = 2'b10 \/\/00: max 1 packet, 01: max 2, 10: max 4, 11: rsvd$/;"	a
AXISTEN_IF_RQ_STRADDLE	pcie_app_uscale_bmd_1024.sv	/^   parameter         AXISTEN_IF_RQ_STRADDLE           = 0,$/;"	a
BMD_AXIST_1024	BMD_AXIST_1024.sv	/^module BMD_AXIST_1024 #($/;"	m
BMD_AXIST_CC_512	BMD_AXIST_CC_512.sv	/^module BMD_AXIST_CC_512 #($/;"	m
BMD_AXIST_CQ_512	BMD_AXIST_CQ_512.sv	/^module BMD_AXIST_CQ_512 #($/;"	m
BMD_AXIST_CQ_CC_SHIM	BMD_AXIST_CQ_CC_SHIM.sv	/^module BMD_AXIST_CQ_CC_SHIM ($/;"	m
BMD_AXIST_EP_1024	BMD_AXIST_EP_1024.sv	/^module BMD_AXIST_EP_1024 #($/;"	m
BMD_AXIST_EP_MEM	BMD_AXIST_EP_MEM.v	/^module BMD_AXIST_EP_MEM  #( parameter NUM_GP_PORTS = 20 ) ($/;"	m
BMD_AXIST_EP_MEM_ACCESS	BMD_AXIST_EP_MEM_ACCESS.v	/^module BMD_AXIST_EP_MEM_ACCESS #( parameter NUM_GP_PORTS = 20 ) ($/;"	m
BMD_AXIST_INTR_CTRL	BMD_AXIST_INTR_CTRL.v	/^module BMD_AXIST_INTR_CTRL#($/;"	m
BMD_AXIST_RC_1024	BMD_AXIST_RC_1024.sv	/^module BMD_AXIST_RC_1024 #($/;"	m
BMD_AXIST_RQ_1024	BMD_AXIST_RQ_1024.sv	/^module BMD_AXIST_RQ_1024 #($/;"	m
BMD_AXIST_RQ_RW_1024	BMD_AXIST_RQ_RW_1024.sv	/^module BMD_AXIST_RQ_RW_1024 #($/;"	m
BMD_AXIST_RX_ATOP_CAS_FMT_TYPE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_ATOP_CAS_FMT_TYPE  = 4'b0110;    \/\/ Compare and SWAP$/;"	a
BMD_AXIST_RX_ATOP_FAA_FMT_TYPE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_ATOP_FAA_FMT_TYPE  = 4'b0100;    \/\/ Fetch and ADD$/;"	a
BMD_AXIST_RX_ATOP_UCS_FMT_TYPE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_ATOP_UCS_FMT_TYPE  = 4'b0101;    \/\/ Unconditional SWAP$/;"	a
BMD_AXIST_RX_DATA	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_DATA               = 8'b00000011;$/;"	a
BMD_AXIST_RX_DATA2	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_DATA2              = 8'b00000100;$/;"	a
BMD_AXIST_RX_IO_RD_FMT_TYPE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_IO_RD_FMT_TYPE     = 4'b0010;    \/\/ IO Read$/;"	a
BMD_AXIST_RX_IO_WR_FMT_TYPE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_IO_WR_FMT_TYPE     = 4'b0011;    \/\/ IO Write$/;"	a
BMD_AXIST_RX_MEM_LK_RD_FMT_TYPE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_MEM_LK_RD_FMT_TYPE = 4'b0111;    \/\/ Locked Read Request$/;"	a
BMD_AXIST_RX_MEM_RD_FMT_TYPE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_MEM_RD_FMT_TYPE    = 4'b0000;    \/\/ Memory Read$/;"	a
BMD_AXIST_RX_MEM_WR_FMT_TYPE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_MEM_WR_FMT_TYPE    = 4'b0001;    \/\/ Memory Write$/;"	a
BMD_AXIST_RX_MSG_ATS_FMT_TYPE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_MSG_ATS_FMT_TYPE   = 4'b1110;    \/\/ MSG Transaction apart from Vendor Defined and ATS$/;"	a
BMD_AXIST_RX_MSG_FMT_TYPE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_MSG_FMT_TYPE       = 4'b1100;    \/\/ MSG Transaction apart from Vendor Defined and ATS$/;"	a
BMD_AXIST_RX_MSG_VD_FMT_TYPE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_MSG_VD_FMT_TYPE    = 4'b1101;    \/\/ MSG Transaction apart from Vendor Defined and ATS$/;"	a
BMD_AXIST_RX_RST_STATE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_RST_STATE          = 8'b00000000;$/;"	a
BMD_AXIST_RX_WAIT_STATE	BMD_AXIST_CQ_512.sv	/^   localparam BMD_AXIST_RX_WAIT_STATE         = 8'b00000001;$/;"	a
BMD_AXIST_TO_CTRL	BMD_AXIST_TO_CTRL.sv	/^module BMD_AXIST_TO_CTRL #($/;"	m
BMD_AXIST_TX_COMPL_C1	BMD_AXIST_CC_512.sv	/^   localparam BMD_AXIST_TX_COMPL_C1                   = 4'b0001;$/;"	a
BMD_AXIST_TX_COMPL_PYLD	BMD_AXIST_CC_512.sv	/^   localparam BMD_AXIST_TX_COMPL_PYLD                 = 4'b0101;$/;"	a
BMD_AXIST_TX_COMPL_WD_2DW	BMD_AXIST_CC_512.sv	/^   localparam BMD_AXIST_TX_COMPL_WD_2DW               = 4'b1010;$/;"	a
BMD_AXIST_TX_COMPL_WD_2DW_ADDR_ALGN_C1	BMD_AXIST_CC_512.sv	/^   localparam BMD_AXIST_TX_COMPL_WD_2DW_ADDR_ALGN_C1  = 4'b1011;$/;"	a
BMD_AXIST_TX_COMPL_WD_2DW_ADDR_ALGN_C2	BMD_AXIST_CC_512.sv	/^   localparam BMD_AXIST_TX_COMPL_WD_2DW_ADDR_ALGN_C2  = 4'b1100;$/;"	a
BMD_AXIST_TX_COMPL_WD_C1	BMD_AXIST_CC_512.sv	/^   localparam BMD_AXIST_TX_COMPL_WD_C1                = 4'b0011;$/;"	a
BMD_AXIST_TX_CPL_UR_C1	BMD_AXIST_CC_512.sv	/^   localparam BMD_AXIST_TX_CPL_UR_C1                  = 4'b0110;$/;"	a
BMD_AXIST_TX_RST_STATE	BMD_AXIST_CC_512.sv	/^   localparam BMD_AXIST_TX_RST_STATE                  = 4'b0000;$/;"	a
CONTROL0	BMD_AXIST_INTR_CTRL.v	/^    wire [35:0] CONTROL0;$/;"	v
C_DATA_WIDTH	BMD_AXIST_1024.sv	/^   parameter         C_DATA_WIDTH                     = 1024,                              \/\/ RX\/TX interface data width$/;"	a
C_DATA_WIDTH	BMD_AXIST_CQ_512.sv	/^   parameter         C_DATA_WIDTH                  = 512,$/;"	a
C_DATA_WIDTH	BMD_AXIST_EP_1024.sv	/^   parameter         C_DATA_WIDTH                     = 1024,                              \/\/ RX\/TX interface data width$/;"	a
C_DATA_WIDTH	BMD_AXIST_RC_1024.sv	/^   parameter         C_DATA_WIDTH                  = 1024,$/;"	a
C_DATA_WIDTH	BMD_AXIST_RQ_1024.sv	/^  ,parameter         C_DATA_WIDTH                  = 1024$/;"	a
C_DATA_WIDTH	BMD_AXIST_RQ_RW_1024.sv	/^  ,parameter         C_DATA_WIDTH                  = 1024$/;"	a
C_DATA_WIDTH	design_1_wrapper.v	/^   parameter         C_DATA_WIDTH                   = 1024;                              \/\/ RX\/TX interface data width$/;"	a
C_DATA_WIDTH	pcie_app_uscale_bmd_1024.sv	/^   \/\/parameter         AXISTEN_IF_EXT_512               = (C_DATA_WIDTH == 512)? 1: 0,$/;"	a
C_DATA_WIDTH	pcie_app_uscale_bmd_1024.sv	/^   \/\/parameter [1:0]   AXISTEN_IF_WIDTH                 = (C_DATA_WIDTH == 512)? 2'b11: $/;"	a
C_DATA_WIDTH	pcie_app_uscale_bmd_1024.sv	/^   parameter         C_DATA_WIDTH                     = 1024,                              \/\/ RX\/TX interface data width$/;"	a
KEEP_WIDTH	BMD_AXIST_1024.sv	/^   parameter         KEEP_WIDTH                       = C_DATA_WIDTH \/ 32$/;"	a
KEEP_WIDTH	BMD_AXIST_CQ_512.sv	/^   parameter         KEEP_WIDTH                    = C_DATA_WIDTH \/ 32,$/;"	a
KEEP_WIDTH	BMD_AXIST_EP_1024.sv	/^   parameter         KEEP_WIDTH                       = C_DATA_WIDTH \/ 32$/;"	a
KEEP_WIDTH	BMD_AXIST_RC_1024.sv	/^   parameter         KEEP_WIDTH                    = C_DATA_WIDTH\/32,$/;"	a
KEEP_WIDTH	BMD_AXIST_RQ_1024.sv	/^  ,parameter         KEEP_WIDTH                    = C_DATA_WIDTH\/32$/;"	a
KEEP_WIDTH	BMD_AXIST_RQ_RW_1024.sv	/^  ,parameter         KEEP_WIDTH                    = C_DATA_WIDTH\/32$/;"	a
KEEP_WIDTH	design_1_wrapper.v	/^   parameter         KEEP_WIDTH                     = C_DATA_WIDTH \/ 32;$/;"	a
KEEP_WIDTH	pcie_app_uscale_bmd_1024.sv	/^   parameter         KEEP_WIDTH                       = C_DATA_WIDTH \/ 32,$/;"	a
NUM_GP_PORTS	BMD_AXIST_EP_MEM.v	/^module BMD_AXIST_EP_MEM  #( parameter NUM_GP_PORTS = 20 ) ($/;"	a
NUM_GP_PORTS	BMD_AXIST_EP_MEM_ACCESS.v	/^module BMD_AXIST_EP_MEM_ACCESS #( parameter NUM_GP_PORTS = 20 ) ($/;"	a
PCIE1_GT_0_grx_n	design_1_wrapper.v	/^  wire [7:0]PCIE1_GT_0_grx_n;$/;"	v
PCIE1_GT_0_grx_p	design_1_wrapper.v	/^  wire [7:0]PCIE1_GT_0_grx_p;$/;"	v
PCIE1_GT_0_gtx_n	design_1_wrapper.v	/^  wire [7:0]PCIE1_GT_0_gtx_n;$/;"	v
PCIE1_GT_0_gtx_p	design_1_wrapper.v	/^  wire [7:0]PCIE1_GT_0_gtx_p;$/;"	v
RD_STRADDLE_NUM	BMD_AXIST_RQ_RW_1024.sv	/^localparam RD_STRADDLE_NUM = AXISTEN_IF_RQ_STRADDLE[1] ? 4 : 2;$/;"	a
RQ_AVAIL_SEQ_NUM	BMD_AXIST_RQ_1024.sv	/^  ,parameter         RQ_AVAIL_SEQ_NUM              = 64$/;"	a
RQ_AVAIL_SEQ_NUM_IDX	BMD_AXIST_RQ_1024.sv	/^  ,parameter         RQ_AVAIL_SEQ_NUM_IDX          = 6$/;"	a
RQ_AVAIL_TAG	BMD_AXIST_1024.sv	/^   parameter         RQ_AVAIL_TAG                     = 256,$/;"	a
RQ_AVAIL_TAG	BMD_AXIST_EP_1024.sv	/^   parameter         RQ_AVAIL_TAG                     = 256,$/;"	a
RQ_AVAIL_TAG	BMD_AXIST_RQ_1024.sv	/^  ,parameter         RQ_AVAIL_TAG                  = 256   $/;"	a
RQ_AVAIL_TAG	pcie_app_uscale_bmd_1024.sv	/^   parameter         RQ_AVAIL_TAG                     = 256,$/;"	a
RQ_AVAIL_TAG_IDX	BMD_AXIST_1024.sv	/^   parameter         RQ_AVAIL_TAG_IDX                 = 8,$/;"	a
RQ_AVAIL_TAG_IDX	BMD_AXIST_EP_1024.sv	/^   parameter         RQ_AVAIL_TAG_IDX                 = 8,$/;"	a
RQ_AVAIL_TAG_IDX	BMD_AXIST_RC_1024.sv	/^   parameter         RQ_AVAIL_TAG_IDX              = 8,   $/;"	a
RQ_AVAIL_TAG_IDX	BMD_AXIST_RQ_1024.sv	/^  ,parameter         RQ_AVAIL_TAG_IDX              = 8$/;"	a
RQ_AVAIL_TAG_IDX	pcie_app_uscale_bmd_1024.sv	/^   parameter         RQ_AVAIL_TAG_IDX                 = 8,$/;"	a
SEQ_NUM_IGNORE	BMD_AXIST_RQ_1024.sv	/^  localparam SEQ_NUM_IGNORE      = 0;$/;"	a
SEQ_NUM_IGNORE	BMD_AXIST_RQ_1024.sv	/^  localparam SEQ_NUM_IGNORE      = 1;$/;"	a
SEQ_NUM_IGNORE	BMD_AXIST_RQ_RW_1024.sv	/^  ,parameter         SEQ_NUM_IGNORE                =    0$/;"	a
TCQ	BMD_AXIST_1024.sv	/^   parameter         TCQ                              = 1,$/;"	a
TCQ	BMD_AXIST_CC_512.sv	/^   parameter         TCQ                           = 1$/;"	a
TCQ	BMD_AXIST_CQ_512.sv	/^   parameter         TCQ                           = 1$/;"	a
TCQ	BMD_AXIST_EP_1024.sv	/^   parameter         TCQ                              = 1,$/;"	a
TCQ	BMD_AXIST_INTR_CTRL.v	/^       parameter        TCQ = 1$/;"	a
TCQ	BMD_AXIST_RC_1024.sv	/^   parameter         TCQ                           = 1$/;"	a
TCQ	BMD_AXIST_RQ_1024.sv	/^  ,parameter         TCQ                           = 1$/;"	a
TCQ	BMD_AXIST_RQ_RW_1024.sv	/^  ,parameter         TCQ                           =    1$/;"	a
TCQ	BMD_AXIST_TO_CTRL.sv	/^   parameter         TCQ                              = 1$/;"	a
TCQ	pcie_app_uscale_bmd_1024.sv	/^   parameter         TCQ                              = 1$/;"	a
`BMD_AXIST_MEM_ACCESS_WR_READ	BMD_AXIST_EP_MEM_ACCESS.v	/^`define BMD_AXIST_MEM_ACCESS_WR_READ    3'b010$/;"	d
`BMD_AXIST_MEM_ACCESS_WR_RST	BMD_AXIST_EP_MEM_ACCESS.v	/^`define BMD_AXIST_MEM_ACCESS_WR_RST     3'b000$/;"	d
`BMD_AXIST_MEM_ACCESS_WR_WAIT	BMD_AXIST_EP_MEM_ACCESS.v	/^`define BMD_AXIST_MEM_ACCESS_WR_WAIT    3'b001$/;"	d
`BMD_AXIST_MEM_ACCESS_WR_WRITE	BMD_AXIST_EP_MEM_ACCESS.v	/^`define BMD_AXIST_MEM_ACCESS_WR_WRITE   3'b100$/;"	d
as	BMD_AXIST_RQ_RW_1024.sv	/^          RAW          : begin \/\/ SAME logic as RD_ONLY_4$/;"	v
avail_seq_num	BMD_AXIST_RQ_1024.sv	/^   logic [RQ_AVAIL_SEQ_NUM-1:0]      avail_seq_num;$/;"	v
between	BMD_AXIST_EP_1024.sv	/^   \/\/ SHIM logic between 1024b\/512b$/;"	v
bmd_reset_n	BMD_AXIST_1024.sv	/^   logic                            bmd_reset_n;$/;"	v
capture_clock	BMD_AXIST_INTR_CTRL.v	/^    wire         capture_clock;$/;"	v
capture_data	BMD_AXIST_INTR_CTRL.v	/^    wire [255:0] capture_data;$/;"	v
capture_trigger	BMD_AXIST_INTR_CTRL.v	/^    wire [ 15:0] capture_trigger;$/;"	v
cfg_config_space_enable	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_config_space_enable,$/;"	v
cfg_ds_bus_number	pcie_app_uscale_bmd_1024.sv	/^   output logic [7:0]               cfg_ds_bus_number,$/;"	v
cfg_ds_device_number	pcie_app_uscale_bmd_1024.sv	/^   output logic [4:0]               cfg_ds_device_number,$/;"	v
cfg_ds_function_number	pcie_app_uscale_bmd_1024.sv	/^   output logic [2:0]               cfg_ds_function_number,$/;"	v
cfg_ds_port_number	pcie_app_uscale_bmd_1024.sv	/^   output logic [7:0]               cfg_ds_port_number,$/;"	v
cfg_dsn	pcie_app_uscale_bmd_1024.sv	/^   output logic [63:0]              cfg_dsn,$/;"	v
cfg_err_cor	BMD_AXIST_1024.sv	/^   output logic                     cfg_err_cor$/;"	v
cfg_err_cor	BMD_AXIST_EP_1024.sv	/^   output logic                     cfg_err_cor$/;"	v
cfg_err_cor_in	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_err_cor_in,$/;"	v
cfg_err_uncor_in	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_err_uncor_in,$/;"	v
cfg_fc_sel	pcie_app_uscale_bmd_1024.sv	/^   output logic [2:0]               cfg_fc_sel,$/;"	v
cfg_flr_done	pcie_app_uscale_bmd_1024.sv	/^   output logic [1:0]               cfg_flr_done,$/;"	v
cfg_flr_done_reg	pcie_app_uscale_bmd_1024.sv	/^   logic                            cfg_flr_done_reg;$/;"	v
cfg_hot_reset_out	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_hot_reset_out$/;"	v
cfg_interrupt_int	BMD_AXIST_1024.sv	/^   output logic [3:0]               cfg_interrupt_int,   \/\/ 4 Bits for INTA, INTB, INTC, INTD (assert or deassert)$/;"	v
cfg_interrupt_int	BMD_AXIST_EP_1024.sv	/^   output logic [3:0]               cfg_interrupt_int,  \/\/ 4 Bits for INTA, INTB, INTC, INTD (assert or deassert)$/;"	v
cfg_interrupt_int	BMD_AXIST_EP_MEM.v	/^   reg [3:0] 		cfg_interrupt_int;$/;"	v
cfg_interrupt_int	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) output reg   [3:0]              cfg_interrupt_int,  \/\/ 4 Bits for INTA, INTB, INTC, INTD (assert or deassert)$/;"	v
cfg_interrupt_int	BMD_AXIST_INTR_CTRL.v	/^  \/\/\/\/output reg [3:0]  cfg_interrupt_int,  \/\/ 4 Bits for INTA, INTB, INTC, INTD (assert or deassert)$/;"	v
cfg_interrupt_int	pcie_app_uscale_bmd_1024.sv	/^   output logic [3:0]               cfg_interrupt_int,$/;"	v
cfg_interrupt_msi_attr	pcie_app_uscale_bmd_1024.sv	/^   output logic [2:0]               cfg_interrupt_msi_attr,$/;"	v
cfg_interrupt_msi_function_number	BMD_AXIST_1024.sv	/^   output logic [7:0]               cfg_interrupt_msi_function_number,$/;"	v
cfg_interrupt_msi_function_number	BMD_AXIST_EP_1024.sv	/^   output logic [7:0]               cfg_interrupt_msi_function_number,$/;"	v
cfg_interrupt_msi_function_number	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) output reg  [7:0]               cfg_interrupt_msi_function_number,$/;"	v
cfg_interrupt_msi_function_number	pcie_app_uscale_bmd_1024.sv	/^   output logic [7:0]               cfg_interrupt_msi_function_number,$/;"	v
cfg_interrupt_msi_int	BMD_AXIST_1024.sv	/^   output logic [31:0]              cfg_interrupt_msi_int,$/;"	v
cfg_interrupt_msi_int	BMD_AXIST_EP_1024.sv	/^   output logic [31:0]              cfg_interrupt_msi_int,$/;"	v
cfg_interrupt_msi_int	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) output reg  [31:0]              cfg_interrupt_msi_int,$/;"	v
cfg_interrupt_msi_int	pcie_app_uscale_bmd_1024.sv	/^   output logic [31:0]              cfg_interrupt_msi_int,$/;"	v
cfg_interrupt_msi_pending_status	pcie_app_uscale_bmd_1024.sv	/^   output logic [63:0]              cfg_interrupt_msi_pending_status,$/;"	v
cfg_interrupt_msi_select	BMD_AXIST_1024.sv	/^   output logic [1:0]               cfg_interrupt_msi_select,$/;"	v
cfg_interrupt_msi_select	BMD_AXIST_EP_1024.sv	/^   output logic [1:0]               cfg_interrupt_msi_select,$/;"	v
cfg_interrupt_msi_select	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) output reg  [1:0]               cfg_interrupt_msi_select,$/;"	v
cfg_interrupt_msi_select	pcie_app_uscale_bmd_1024.sv	/^   output logic [1:0]               cfg_interrupt_msi_select,$/;"	v
cfg_interrupt_msi_tph_present	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_interrupt_msi_tph_present,$/;"	v
cfg_interrupt_msi_tph_st_tag	pcie_app_uscale_bmd_1024.sv	/^   output logic [7:0]               cfg_interrupt_msi_tph_st_tag,$/;"	v
cfg_interrupt_msi_tph_type	pcie_app_uscale_bmd_1024.sv	/^   output logic [1:0]               cfg_interrupt_msi_tph_type,$/;"	v
cfg_interrupt_msix_int	BMD_AXIST_1024.sv	/^   output logic                     cfg_interrupt_msix_int,$/;"	v
cfg_interrupt_msix_int	BMD_AXIST_EP_1024.sv	/^   output logic                     cfg_interrupt_msix_int,$/;"	v
cfg_interrupt_msix_int	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) output reg                      cfg_interrupt_msix_int,$/;"	v
cfg_interrupt_msix_int	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_interrupt_msix_int,$/;"	v
cfg_interrupt_msix_vec_pending	BMD_AXIST_1024.sv	/^   output logic [1:0]               cfg_interrupt_msix_vec_pending,$/;"	v
cfg_interrupt_msix_vec_pending	BMD_AXIST_EP_1024.sv	/^   output logic [1:0]               cfg_interrupt_msix_vec_pending,$/;"	v
cfg_interrupt_msix_vec_pending	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) output reg   [1:0]              cfg_interrupt_msix_vec_pending,$/;"	v
cfg_interrupt_msix_vec_pending	pcie_app_uscale_bmd_1024.sv	/^   output logic [1:0]               cfg_interrupt_msix_vec_pending,$/;"	v
cfg_interrupt_pending	BMD_AXIST_EP_1024.sv	/^   output logic [3:0]               cfg_interrupt_pending, \/\/ For Legacy interrupts$/;"	v
cfg_interrupt_pending	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) output reg   [3:0]              cfg_interrupt_pending \/\/ For Legacy interrupts$/;"	v
cfg_interrupt_pending	pcie_app_uscale_bmd_1024.sv	/^   output logic [1:0]               cfg_interrupt_pending,$/;"	v
cfg_interrupt_sent	BMD_AXIST_EP_MEM.v	/^   reg 				cfg_interrupt_sent;$/;"	v
cfg_link_training_enable	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_link_training_enable,$/;"	v
cfg_mgmt_addr	pcie_app_uscale_bmd_1024.sv	/^   output logic [9:0]               cfg_mgmt_addr,$/;"	v
cfg_mgmt_byte_enable	pcie_app_uscale_bmd_1024.sv	/^   output logic [3:0]               cfg_mgmt_byte_enable,$/;"	v
cfg_mgmt_read	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_mgmt_read,$/;"	v
cfg_mgmt_type1_cfg_reg_access	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_mgmt_type1_cfg_reg_access,$/;"	v
cfg_mgmt_write	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_mgmt_write,$/;"	v
cfg_mgmt_write_data	pcie_app_uscale_bmd_1024.sv	/^   output logic [31:0]              cfg_mgmt_write_data,$/;"	v
cfg_msg_transmit	BMD_AXIST_1024.sv	/^   output logic                     cfg_msg_transmit,$/;"	v
cfg_msg_transmit	BMD_AXIST_CC_512.sv	/^   output logic                     cfg_msg_transmit,$/;"	v
cfg_msg_transmit	BMD_AXIST_EP_1024.sv	/^   output logic                     cfg_msg_transmit,$/;"	v
cfg_msg_transmit	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_msg_transmit,$/;"	v
cfg_msg_transmit_data	BMD_AXIST_1024.sv	/^   output logic [31:0]              cfg_msg_transmit_data,$/;"	v
cfg_msg_transmit_data	BMD_AXIST_CC_512.sv	/^   output logic [31:0]              cfg_msg_transmit_data,$/;"	v
cfg_msg_transmit_data	BMD_AXIST_EP_1024.sv	/^   output logic [31:0]              cfg_msg_transmit_data,$/;"	v
cfg_msg_transmit_data	pcie_app_uscale_bmd_1024.sv	/^   output logic [31:0]              cfg_msg_transmit_data,$/;"	v
cfg_msg_transmit_type	BMD_AXIST_1024.sv	/^   output logic [2:0]               cfg_msg_transmit_type,$/;"	v
cfg_msg_transmit_type	BMD_AXIST_CC_512.sv	/^   output logic [2:0]               cfg_msg_transmit_type,$/;"	v
cfg_msg_transmit_type	BMD_AXIST_EP_1024.sv	/^   output logic [2:0]               cfg_msg_transmit_type,$/;"	v
cfg_msg_transmit_type	pcie_app_uscale_bmd_1024.sv	/^   output logic [2:0]               cfg_msg_transmit_type,$/;"	v
cfg_power_state_change_ack	BMD_AXIST_1024.sv	/^   output logic                     cfg_power_state_change_ack,$/;"	v
cfg_power_state_change_ack	BMD_AXIST_TO_CTRL.sv	/^   output logic                     cfg_power_state_change_ack$/;"	v
cfg_power_state_change_ack	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_power_state_change_ack,$/;"	v
cfg_req_pm_transition_l23_ready	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_req_pm_transition_l23_ready,$/;"	v
cfg_vf_flr_done	pcie_app_uscale_bmd_1024.sv	/^   output logic                     cfg_vf_flr_done,$/;"	v
cfg_vf_flr_func_num	pcie_app_uscale_bmd_1024.sv	/^   output wire [7:0]                cfg_vf_flr_func_num,$/;"	v
cfg_vf_flr_func_num_reg	pcie_app_uscale_bmd_1024.sv	/^reg     [7:0]     cfg_vf_flr_func_num_reg;$/;"	v
client_tag_released_0	BMD_AXIST_EP_1024.sv	/^   logic                            client_tag_released_0;$/;"	v
client_tag_released_0	BMD_AXIST_RC_1024.sv	/^   output logic                     client_tag_released_0,$/;"	v
client_tag_released_0_wire	BMD_AXIST_RC_1024.sv	/^   logic          client_tag_released_0_wire;$/;"	v
client_tag_released_1	BMD_AXIST_EP_1024.sv	/^   logic                            client_tag_released_1;$/;"	v
client_tag_released_1	BMD_AXIST_RC_1024.sv	/^   output logic                     client_tag_released_1,$/;"	v
client_tag_released_1_wire	BMD_AXIST_RC_1024.sv	/^   logic          client_tag_released_1_wire;$/;"	v
client_tag_released_2	BMD_AXIST_EP_1024.sv	/^   logic                            client_tag_released_2;$/;"	v
client_tag_released_2	BMD_AXIST_RC_1024.sv	/^   output logic                     client_tag_released_2,$/;"	v
client_tag_released_2_wire	BMD_AXIST_RC_1024.sv	/^   logic          client_tag_released_2_wire;$/;"	v
client_tag_released_3	BMD_AXIST_EP_1024.sv	/^   logic                            client_tag_released_3;$/;"	v
client_tag_released_3	BMD_AXIST_RC_1024.sv	/^   output logic                     client_tag_released_3,$/;"	v
client_tag_released_3_wire	BMD_AXIST_RC_1024.sv	/^   logic          client_tag_released_3_wire;$/;"	v
client_tag_released_num_0	BMD_AXIST_EP_1024.sv	/^   logic [RQ_AVAIL_TAG_IDX-1:0]     client_tag_released_num_0;$/;"	v
client_tag_released_num_0	BMD_AXIST_RC_1024.sv	/^   output logic [RQ_AVAIL_TAG_IDX-1:0] client_tag_released_num_0,$/;"	v
client_tag_released_num_0_wire	BMD_AXIST_RC_1024.sv	/^   logic [RQ_AVAIL_TAG_IDX-1:0] client_tag_released_num_0_wire;$/;"	v
client_tag_released_num_1	BMD_AXIST_EP_1024.sv	/^   logic [RQ_AVAIL_TAG_IDX-1:0]     client_tag_released_num_1;$/;"	v
client_tag_released_num_1	BMD_AXIST_RC_1024.sv	/^   output logic [RQ_AVAIL_TAG_IDX-1:0] client_tag_released_num_1,$/;"	v
client_tag_released_num_1_wire	BMD_AXIST_RC_1024.sv	/^   logic [RQ_AVAIL_TAG_IDX-1:0] client_tag_released_num_1_wire;$/;"	v
client_tag_released_num_2	BMD_AXIST_EP_1024.sv	/^   logic [RQ_AVAIL_TAG_IDX-1:0]     client_tag_released_num_2;$/;"	v
client_tag_released_num_2	BMD_AXIST_RC_1024.sv	/^   output logic [RQ_AVAIL_TAG_IDX-1:0] client_tag_released_num_2,$/;"	v
client_tag_released_num_2_wire	BMD_AXIST_RC_1024.sv	/^   logic [RQ_AVAIL_TAG_IDX-1:0] client_tag_released_num_2_wire;$/;"	v
client_tag_released_num_3	BMD_AXIST_EP_1024.sv	/^   logic [RQ_AVAIL_TAG_IDX-1:0]     client_tag_released_num_3;$/;"	v
client_tag_released_num_3	BMD_AXIST_RC_1024.sv	/^   output logic [RQ_AVAIL_TAG_IDX-1:0] client_tag_released_num_3,$/;"	v
client_tag_released_num_3_wire	BMD_AXIST_RC_1024.sv	/^   logic [RQ_AVAIL_TAG_IDX-1:0] client_tag_released_num_3_wire;$/;"	v
compl_done	BMD_AXIST_CC_512.sv	/^   output logic                     compl_done,$/;"	v
compl_done	BMD_AXIST_EP_1024.sv	/^   logic                            compl_done;$/;"	v
completer_id	BMD_AXIST_EP_1024.sv	/^   logic [15:0]                     completer_id;$/;"	v
counter	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) reg [3:0] counter; \/\/ state for debug$/;"	v
cpl_streaming	BMD_AXIST_EP_1024.sv	/^   logic                            cpl_streaming;$/;"	v
cpl_streaming_o	BMD_AXIST_EP_MEM.v	/^   reg 				cpl_streaming_o;$/;"	v
cpl_ur_found	BMD_AXIST_EP_1024.sv	/^   logic [7:0]                      cpl_ur_found;$/;"	v
cpl_ur_tag	BMD_AXIST_EP_1024.sv	/^   logic [7:0]                      cpl_ur_tag;$/;"	v
cpld_data	BMD_AXIST_EP_1024.sv	/^   logic [31:0]                     cpld_data;$/;"	v
cpld_data_err	BMD_AXIST_EP_1024.sv	/^   logic                            cpld_data_err;$/;"	v
cpld_data_err_o	BMD_AXIST_RC_1024.sv	/^   (*mark_debug*)output logic                     cpld_data_err_o,$/;"	v
cpld_data_err_wire	BMD_AXIST_RC_1024.sv	/^   logic          cpld_data_err_wire;$/;"	v
cpld_data_o	BMD_AXIST_EP_MEM.v	/^   (*mark_debug*) reg [31:0] 	cpld_data_o;$/;"	v
cpld_data_size	BMD_AXIST_EP_1024.sv	/^   logic [31:0]                     cpld_data_size;$/;"	v
cpld_data_size	BMD_AXIST_EP_MEM.v	/^   (*mark_debug*) reg [20:0] 	cpld_data_size;         \/\/ 2 GB max$/;"	v
cpld_data_size	BMD_AXIST_RC_1024.sv	/^   logic [10:0]   cpld_data_size [7:0];$/;"	v
cpld_data_size_o	BMD_AXIST_RC_1024.sv	/^   (*mark_debug*)output logic [31:0]              cpld_data_size_o,$/;"	v
cpld_data_size_wire	BMD_AXIST_RC_1024.sv	/^   logic [31:0]   cpld_data_size_wire;$/;"	v
cpld_done	BMD_AXIST_EP_MEM.v	/^   (*mark_debug*) reg 				cpld_done;$/;"	v
cpld_found	BMD_AXIST_EP_1024.sv	/^   logic [31:0]                     cpld_found;$/;"	v
cpld_found_dw	BMD_AXIST_RC_1024.sv	/^   logic [7:0]    cpld_found_dw;$/;"	v
cpld_found_o	BMD_AXIST_RC_1024.sv	/^   (*mark_debug*)output logic [31:0]              cpld_found_o,$/;"	v
cpld_found_wire	BMD_AXIST_RC_1024.sv	/^   logic [31:0]   cpld_found_wire;$/;"	v
cpld_malformed	BMD_AXIST_EP_1024.sv	/^   logic                            cpld_malformed;$/;"	v
cpld_parity_err	BMD_AXIST_EP_1024.sv	/^   logic                            cpld_parity_err;$/;"	v
cpld_parity_err_o	BMD_AXIST_RC_1024.sv	/^   (*mark_debug*)output logic                     cpld_parity_err_o$/;"	v
cpld_parity_err_wire	BMD_AXIST_RC_1024.sv	/^   logic          cpld_parity_err_wire;$/;"	v
cpld_size	BMD_AXIST_EP_1024.sv	/^   logic [31:0]                     cpld_size;$/;"	v
curr_mrd_count	BMD_AXIST_RQ_RW_1024.sv	/^   logic [15:0]   curr_mrd_count,   curr_mrd_count_w;$/;"	v
curr_mrd_wrr_cnt	BMD_AXIST_RQ_RW_1024.sv	/^   logic [15:0]   curr_mrd_wrr_cnt, curr_mrd_wrr_cnt_w;$/;"	v
curr_mwr_count	BMD_AXIST_RQ_RW_1024.sv	/^   logic [15:0]   curr_mwr_count,   curr_mwr_count_w;$/;"	v
curr_mwr_len	BMD_AXIST_RQ_RW_1024.sv	/^   logic [31-5:0] curr_mwr_len, curr_mwr_len_w;$/;"	v
curr_mwr_wrr_cnt	BMD_AXIST_RQ_RW_1024.sv	/^   logic [15:0]   curr_mwr_wrr_cnt, curr_mwr_wrr_cnt_w;$/;"	v
curr_seq_num	BMD_AXIST_RQ_1024.sv	/^   logic [RQ_AVAIL_SEQ_NUM_IDX-1:0]  curr_seq_num;$/;"	v
data_start_loc	BMD_AXIST_CQ_512.sv	/^   logic [2:0]    data_start_loc;$/;"	v
design_1_wrapper	design_1_wrapper.v	/^module design_1_wrapper$/;"	m
dqw_error_wire	BMD_AXIST_RC_1024.sv	/^   (*mark_debug*) logic [7:0]    dqw_error_wire;$/;"	v
dqw_is_end	BMD_AXIST_RC_1024.sv	/^   (*mark_debug*) logic [23:0]   dqw_is_end;$/;"	v
dqw_is_first_qw0	BMD_AXIST_RC_1024.sv	/^   \/\/logic [3:0]    dqw_is_first_qw0; \/\/ only used in address-align$/;"	v
dqw_is_header	BMD_AXIST_RC_1024.sv	/^   (*mark_debug*) logic [7:0]    dqw_is_header;$/;"	v
dqw_parity_error_wire	BMD_AXIST_RC_1024.sv	/^   (*mark_debug*) logic [7:0]    dqw_parity_error_wire;$/;"	v
dword_count	BMD_AXIST_CC_512.sv	/^   logic          dword_count;$/;"	v
erom_bar_hit_n	BMD_AXIST_CQ_512.sv	/^   logic          erom_bar_hit_n;$/;"	v
exp_parity	BMD_AXIST_CQ_512.sv	/^   logic [63:0]   exp_parity;$/;"	v
exp_parity	BMD_AXIST_RC_1024.sv	/^   logic [127:0]   exp_parity;$/;"	v
expect_cpld_data_size	BMD_AXIST_EP_MEM.v	/^   (*mark_debug*) reg [20:0] 	expect_cpld_data_size;  \/\/ 2 GB max$/;"	v
f_rc_dqw_error_check	BMD_AXIST_RC_1024.sv	/^   function automatic f_rc_dqw_error_check;$/;"	f
f_rc_dqw_parity_check	BMD_AXIST_RC_1024.sv	/^   function automatic f_rc_dqw_parity_check;$/;"	f
fpga_family	BMD_AXIST_EP_MEM.v	/^   wire [7:0] 	    fpga_family;$/;"	v
gen_leg_intr_rd	BMD_AXIST_EP_1024.sv	/^   logic                            gen_leg_intr_rd;$/;"	v
gen_leg_intr_wr	BMD_AXIST_EP_1024.sv	/^   logic                            gen_leg_intr_wr;$/;"	v
gp_data_dn0	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn0;$/;"	v
gp_data_dn1	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn1;$/;"	v
gp_data_dn10	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn10;$/;"	v
gp_data_dn11	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn11;$/;"	v
gp_data_dn12	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn12;$/;"	v
gp_data_dn13	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn13;$/;"	v
gp_data_dn14	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn14;$/;"	v
gp_data_dn15	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn15;$/;"	v
gp_data_dn16	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn16;$/;"	v
gp_data_dn17	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn17;$/;"	v
gp_data_dn18	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn18;$/;"	v
gp_data_dn19	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn19;$/;"	v
gp_data_dn2	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn2;$/;"	v
gp_data_dn3	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn3;$/;"	v
gp_data_dn4	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn4;$/;"	v
gp_data_dn5	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn5;$/;"	v
gp_data_dn6	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn6;$/;"	v
gp_data_dn7	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn7;$/;"	v
gp_data_dn8	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn8;$/;"	v
gp_data_dn9	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 			  gp_data_dn9;$/;"	v
gp_data_dnstream	BMD_AXIST_EP_MEM_ACCESS.v	/^\/\/ wire [(NUM_GP_PORTS*32-1):0] gp_data_dnstream; \/\/ output$/;"	v
gp_data_up0	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up0  = gp_data_upstream[31:0];$/;"	v
gp_data_up1	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up1  = gp_data_upstream[63:32];$/;"	v
gp_data_up10	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up10 = gp_data_upstream[351:320];$/;"	v
gp_data_up11	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up11 = gp_data_upstream[383:352];$/;"	v
gp_data_up12	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up12 = gp_data_upstream[415:384];$/;"	v
gp_data_up13	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up13 = gp_data_upstream[447:416];$/;"	v
gp_data_up14	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up14 = gp_data_upstream[479:448];$/;"	v
gp_data_up15	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up15 = gp_data_upstream[511:480];$/;"	v
gp_data_up16	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up16 = gp_data_upstream[543:512];$/;"	v
gp_data_up17	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up17 = gp_data_upstream[575:544];$/;"	v
gp_data_up18	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up18 = gp_data_upstream[607:576];$/;"	v
gp_data_up19	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up19 = gp_data_upstream[639:608];$/;"	v
gp_data_up2	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up2  = gp_data_upstream[95:64];$/;"	v
gp_data_up3	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up3  = gp_data_upstream[127:96];$/;"	v
gp_data_up4	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up4  = gp_data_upstream[159:128];$/;"	v
gp_data_up5	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up5  = gp_data_upstream[191:160];$/;"	v
gp_data_up6	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up6  = gp_data_upstream[223:192];$/;"	v
gp_data_up7	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up7  = gp_data_upstream[255:224];$/;"	v
gp_data_up8	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up8  = gp_data_upstream[287:256];$/;"	v
gp_data_up9	BMD_AXIST_EP_MEM.v	/^   wire [31:0] 			  gp_data_up9  = gp_data_upstream[319:288];$/;"	v
gp_data_upstream	BMD_AXIST_EP_MEM_ACCESS.v	/^\/\/ wire [(NUM_GP_PORTS*32-1):0] gp_data_upstream; \/\/ input$/;"	v
gt_refclk1_0_clk_n	design_1_wrapper.v	/^  wire gt_refclk1_0_clk_n;$/;"	v
gt_refclk1_0_clk_p	design_1_wrapper.v	/^  wire gt_refclk1_0_clk_p;$/;"	v
init_rst	BMD_AXIST_EP_1024.sv	/^   logic                            init_rst;$/;"	v
init_rst_o	BMD_AXIST_EP_MEM.v	/^   reg 			    init_rst_o;$/;"	v
interface_type	BMD_AXIST_EP_MEM.v	/^   wire [3:0] 		interface_type;$/;"	v
interl_en	BMD_AXIST_RQ_RW_1024.sv	/^   logic          interl_en, interl_en_w;$/;"	v
interrupt_done	BMD_AXIST_1024.sv	/^   output logic                     interrupt_done,   \/\/ Indicates whether interrupt is done or in process$/;"	v
interrupt_done	BMD_AXIST_EP_1024.sv	/^   output logic                     interrupt_done,  \/\/ Indicates whether interrupt is done or in process$/;"	v
interrupt_done	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) output reg                      interrupt_done,  \/\/ Indicates whether interrupt is done or in process$/;"	v
interrupt_done	BMD_AXIST_INTR_CTRL.v	/^  \/\/\/\/output reg        interrupt_done,  \/\/ Indicates whether interrupt is done or in process$/;"	v
io_bar_hit_n	BMD_AXIST_CQ_512.sv	/^   logic          io_bar_hit_n;$/;"	v
leds	pcie_app_uscale_bmd_1024.sv	/^   output wire            [7:0]     leds,$/;"	v
lower_addr	BMD_AXIST_CC_512.sv	/^   logic [6:0]    lower_addr;$/;"	v
lower_addr_q	BMD_AXIST_CC_512.sv	/^   reg   [6:0]    lower_addr_q;$/;"	v
m_axis_cq_rts	pcie_app_uscale_bmd_1024.sv	/^   output logic                           m_axis_cq_rts,$/;"	v
m_axis_cq_tdata_512_int	BMD_AXIST_EP_1024.sv	/^   logic [511:0]        m_axis_cq_tdata_512_int;$/;"	v
m_axis_cq_tdata_q	BMD_AXIST_CQ_512.sv	/^   reg [C_DATA_WIDTH-1:0]        m_axis_cq_tdata_q;$/;"	v
m_axis_cq_tkeep_512_int	BMD_AXIST_EP_1024.sv	/^   logic [15:0]         m_axis_cq_tkeep_512_int;$/;"	v
m_axis_cq_tkeep_q	BMD_AXIST_CQ_512.sv	/^   reg                           m_axis_cq_tkeep_q;$/;"	v
m_axis_cq_tready	BMD_AXIST_1024.sv	/^   output logic                           m_axis_cq_tready,$/;"	v
m_axis_cq_tready	BMD_AXIST_CQ_512.sv	/^   output logic                     m_axis_cq_tready,$/;"	v
m_axis_cq_tready	BMD_AXIST_EP_1024.sv	/^   output logic                           m_axis_cq_tready,$/;"	v
m_axis_cq_tready	pcie_app_uscale_bmd_1024.sv	/^   output logic                           m_axis_cq_tready,$/;"	v
m_axis_cq_tready_bit	pcie_app_uscale_bmd_1024.sv	/^   logic                            m_axis_cq_tready_bit;$/;"	v
m_axis_cq_tuser_q	BMD_AXIST_CQ_512.sv	/^   reg [AXI4_CQ_TUSER_WIDTH-1:0] m_axis_cq_tuser_q;$/;"	v
m_axis_cq_tvalid_q	BMD_AXIST_CQ_512.sv	/^   reg                           m_axis_cq_tvalid_q;$/;"	v
m_axis_rc_rts	pcie_app_uscale_bmd_1024.sv	/^   output logic                           m_axis_rc_rts,$/;"	v
m_axis_rc_tready	BMD_AXIST_1024.sv	/^   output logic                           m_axis_rc_tready,$/;"	v
m_axis_rc_tready	BMD_AXIST_EP_1024.sv	/^   output logic                           m_axis_rc_tready,$/;"	v
m_axis_rc_tready	BMD_AXIST_RC_1024.sv	/^   (*mark_debug*) output logic                           m_axis_rc_tready,$/;"	v
m_axis_rc_tready	pcie_app_uscale_bmd_1024.sv	/^   output logic                           m_axis_rc_tready,$/;"	v
m_axis_rc_tready_bit	pcie_app_uscale_bmd_1024.sv	/^   logic                            m_axis_rc_tready_bit;$/;"	v
m_axis_rc_tready_int	BMD_AXIST_EP_1024.sv	/^\/\/   logic                           m_axis_rc_tready_int; \/\/ TODO for TEMP wire from RC module, need to be connected back to output$/;"	v
mem32_bar_hit_n	BMD_AXIST_CQ_512.sv	/^   logic          mem32_bar_hit_n;$/;"	v
mem64_bar_hit_n	BMD_AXIST_CQ_512.sv	/^   logic          mem64_bar_hit_n;$/;"	v
mem_addr	BMD_AXIST_EP_MEM_ACCESS.v	/^   wire [6:0] 			  mem_addr = addr_i; $/;"	v
mem_rd_data	BMD_AXIST_EP_MEM_ACCESS.v	/^   wire [31:0] 	    mem_rd_data;$/;"	v
mem_rd_data_dbg	BMD_AXIST_EP_MEM_ACCESS.v	/^(* mark_debug *) wire [31:0] mem_rd_data_dbg = mem_rd_data;$/;"	v
mem_wr_data	BMD_AXIST_EP_MEM_ACCESS.v	/^   reg [31:0] 		mem_wr_data;$/;"	v
mem_write_en	BMD_AXIST_EP_MEM_ACCESS.v	/^   reg                  mem_write_en;$/;"	v
mrd_64b_en_o	BMD_AXIST_EP_1024.sv	/^   logic                            mrd_64b_en_o;$/;"	v
mrd_64b_en_o	BMD_AXIST_EP_MEM.v	/^   reg 				mrd_64b_en_o;$/;"	v
mrd_addr	BMD_AXIST_EP_1024.sv	/^   logic [31:0]                     mrd_addr;$/;"	v
mrd_addr_o	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 		mrd_addr_o;$/;"	v
mrd_count	BMD_AXIST_EP_1024.sv	/^   logic [15:0]                     mrd_count;$/;"	v
mrd_count_o	BMD_AXIST_EP_MEM.v	/^   reg [15:0] 		mrd_count_o;$/;"	v
mrd_done	BMD_AXIST_EP_1024.sv	/^   logic                                                  mrd_done;$/;"	v
mrd_done_int	BMD_AXIST_RQ_1024.sv	/^   logic                             mrd_done_int;$/;"	v
mrd_done_mem_access_o	BMD_AXIST_EP_1024.sv	/^(* mark_debug *)   logic                                  mrd_done_mem_access_o;$/;"	v
mrd_done_o	BMD_AXIST_EP_MEM.v	/^   reg 				mrd_done_o;$/;"	v
mrd_done_o	BMD_AXIST_RQ_1024.sv	/^   output logic                     mrd_done_o,$/;"	v
mrd_done_o	BMD_AXIST_RQ_RW_1024.sv	/^  ,(*mark_debug*)output logic                           mrd_done_o$/;"	v
mrd_done_tx_engine_o	BMD_AXIST_EP_1024.sv	/^(* mark_debug *)   logic                                  mrd_done_tx_engine_o;$/;"	v
mrd_fbe	BMD_AXIST_EP_1024.sv	/^   logic [3:0]                      mrd_fbe;$/;"	v
mrd_int_dis_o	BMD_AXIST_EP_1024.sv	/^   logic                            mrd_int_dis_o;$/;"	v
mrd_int_dis_o	BMD_AXIST_EP_MEM.v	/^   reg 				mrd_int_dis_o;$/;"	v
mrd_lbe	BMD_AXIST_EP_1024.sv	/^   logic [3:0]                      mrd_lbe;$/;"	v
mrd_len	BMD_AXIST_EP_1024.sv	/^   logic [15:0]                     mrd_len;$/;"	v
mrd_len_log2	BMD_AXIST_RQ_RW_1024.sv	/^   logic  [3:0]   mrd_len_log2;$/;"	v
mrd_len_o	BMD_AXIST_EP_MEM.v	/^   reg [15:0] 		mrd_len_o;$/;"	v
mrd_nosnoop	BMD_AXIST_EP_1024.sv	/^   logic                            mrd_nosnoop;$/;"	v
mrd_nosnoop_o	BMD_AXIST_EP_MEM.v	/^   reg 				mrd_nosnoop_o;$/;"	v
mrd_perf	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 	    mrd_perf;$/;"	v
mrd_phant_func_dis1_o	BMD_AXIST_EP_MEM.v	/^   reg 				mrd_phant_func_dis1_o;$/;"	v
mrd_phant_func_en1	BMD_AXIST_EP_1024.sv	/^   logic                            mrd_phant_func_en1;$/;"	v
mrd_relaxed_order	BMD_AXIST_EP_1024.sv	/^   logic                            mrd_relaxed_order;$/;"	v
mrd_relaxed_order_o	BMD_AXIST_EP_MEM.v	/^   reg 				mrd_relaxed_order_o;$/;"	v
mrd_start	BMD_AXIST_EP_1024.sv	/^   logic                            mrd_start;$/;"	v
mrd_start_o	BMD_AXIST_EP_1024.sv	/^   logic                            mrd_start_o;$/;"	v
mrd_start_o	BMD_AXIST_EP_MEM.v	/^   reg 			    mrd_start_o;$/;"	v
mrd_tag	BMD_AXIST_EP_1024.sv	/^   logic [7:0]                      mrd_tag;$/;"	v
mrd_tlp_tc_o	BMD_AXIST_EP_1024.sv	/^   logic [2:0]                      mrd_tlp_tc_o;$/;"	v
mrd_tlp_tc_o	BMD_AXIST_EP_MEM.v	/^   reg [2:0] 		mrd_tlp_tc_o;$/;"	v
mrd_up_addr_o	BMD_AXIST_EP_1024.sv	/^   logic [7:0]                      mrd_up_addr_o;$/;"	v
mrd_up_addr_o	BMD_AXIST_EP_MEM.v	/^   reg [7:0] 		mrd_up_addr_o;$/;"	v
mrd_wrr_cnt	BMD_AXIST_EP_1024.sv	/^   logic [7:0]                      mrd_wrr_cnt;$/;"	v
mrd_wrr_cnt_o	BMD_AXIST_EP_MEM.v	/^   reg [7:0]    	mrd_wrr_cnt_o;$/;"	v
mwr_64b_en_o	BMD_AXIST_EP_1024.sv	/^   logic                            mwr_64b_en_o;$/;"	v
mwr_64b_en_o	BMD_AXIST_EP_MEM.v	/^   reg 				mwr_64b_en_o;$/;"	v
mwr_addr	BMD_AXIST_EP_1024.sv	/^   logic [31:0]                     mwr_addr;$/;"	v
mwr_addr_o	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 		mwr_addr_o;$/;"	v
mwr_count	BMD_AXIST_EP_1024.sv	/^   logic [15:0]                     mwr_count;$/;"	v
mwr_count_o	BMD_AXIST_EP_MEM.v	/^   reg [15:0] 		mwr_count_o;$/;"	v
mwr_data	BMD_AXIST_EP_1024.sv	/^   logic [31:0]                     mwr_data;$/;"	v
mwr_data_o	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 		mwr_data_o;$/;"	v
mwr_done	BMD_AXIST_EP_1024.sv	/^   logic                            mwr_done;$/;"	v
mwr_done_int	BMD_AXIST_RQ_1024.sv	/^   logic                             mwr_done_int;$/;"	v
mwr_done_o	BMD_AXIST_RQ_1024.sv	/^   output logic                     mwr_done_o,$/;"	v
mwr_done_o	BMD_AXIST_RQ_RW_1024.sv	/^  ,(*mark_debug*)output logic                           mwr_done_o$/;"	v
mwr_en	BMD_AXIST_RQ_RW_1024.sv	/^   logic          mwr_en,    mrd_en;$/;"	v
mwr_fbe	BMD_AXIST_EP_1024.sv	/^   logic [3:0]                      mwr_fbe;$/;"	v
mwr_int_dis_o	BMD_AXIST_EP_1024.sv	/^   logic                            mwr_int_dis_o;$/;"	v
mwr_int_dis_o	BMD_AXIST_EP_MEM.v	/^   reg 				mwr_int_dis_o;$/;"	v
mwr_lbe	BMD_AXIST_EP_1024.sv	/^   logic [3:0]                      mwr_lbe;$/;"	v
mwr_len	BMD_AXIST_EP_1024.sv	/^   logic [15:0]                     mwr_len;$/;"	v
mwr_len_case	BMD_AXIST_RQ_RW_1024.sv	/^   logic  [2:0]   mwr_len_case;$/;"	v
mwr_len_log2	BMD_AXIST_RQ_RW_1024.sv	/^   logic  [3:0]   mwr_len_log2;$/;"	v
mwr_len_o	BMD_AXIST_EP_MEM.v	/^   reg [15:0] 		mwr_len_o;$/;"	v
mwr_nosnoop	BMD_AXIST_EP_1024.sv	/^   logic                            mwr_nosnoop;$/;"	v
mwr_nosnoop_o	BMD_AXIST_EP_MEM.v	/^   reg 				mwr_nosnoop_o;$/;"	v
mwr_perf	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 		mwr_perf;$/;"	v
mwr_phant_func_dis1_o	BMD_AXIST_EP_MEM.v	/^   reg 				mwr_phant_func_dis1_o;$/;"	v
mwr_phant_func_en1	BMD_AXIST_EP_1024.sv	/^   logic                            mwr_phant_func_en1;$/;"	v
mwr_relaxed_order	BMD_AXIST_EP_1024.sv	/^   logic                            mwr_relaxed_order;$/;"	v
mwr_relaxed_order_o	BMD_AXIST_EP_MEM.v	/^   reg 				mwr_relaxed_order_o;$/;"	v
mwr_start	BMD_AXIST_EP_1024.sv	/^   logic                            mwr_start;$/;"	v
mwr_start_o	BMD_AXIST_EP_MEM.v	/^   reg 				mwr_start_o;$/;"	v
mwr_tag	BMD_AXIST_EP_1024.sv	/^   logic [7:0]                      mwr_tag;$/;"	v
mwr_tlp_tc_o	BMD_AXIST_EP_1024.sv	/^   logic [2:0]                      mwr_tlp_tc_o;$/;"	v
mwr_tlp_tc_o	BMD_AXIST_EP_MEM.v	/^   reg [2:0] 		mwr_tlp_tc_o;$/;"	v
mwr_up_addr_o	BMD_AXIST_EP_1024.sv	/^   logic [7:0]                      mwr_up_addr_o;$/;"	v
mwr_up_addr_o	BMD_AXIST_EP_MEM.v	/^   reg [7:0] 		mwr_up_addr_o;$/;"	v
mwr_wrr_cnt	BMD_AXIST_EP_1024.sv	/^   logic [7:0]                      mwr_wrr_cnt;$/;"	v
mwr_wrr_cnt_o	BMD_AXIST_EP_MEM.v	/^   reg [7:0] 		mwr_wrr_cnt_o;$/;"	v
mwr_zerolen_en_o	BMD_AXIST_EP_1024.sv	/^   logic                            mwr_zerolen_en_o;$/;"	v
mwr_zerolen_en_o	BMD_AXIST_EP_MEM.v	/^   reg 			    mwr_zerolen_en_o;$/;"	v
negotiatedwidth	pcie_app_uscale_bmd_1024.sv	/^wire   [5:0] negotiatedwidth;$/;"	v
parity_error_wire	BMD_AXIST_CQ_512.sv	/^   logic          parity_error_wire;$/;"	v
payload_len	BMD_AXIST_CQ_512.sv	/^   output logic                     payload_len,        \/\/ Transaction Payload Length$/;"	v
payload_len	BMD_AXIST_EP_1024.sv	/^   logic                            payload_len;$/;"	v
pcie1_cfg_10b_tag_requester_enable_0	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_10b_tag_requester_enable_0;$/;"	v
pcie1_cfg_atomic_requester_enable_0	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_atomic_requester_enable_0;$/;"	v
pcie1_cfg_control_0_err_cor_in	design_1_wrapper.v	/^  wire pcie1_cfg_control_0_err_cor_in;$/;"	v
pcie1_cfg_control_0_err_uncor_in	design_1_wrapper.v	/^  wire pcie1_cfg_control_0_err_uncor_in;$/;"	v
pcie1_cfg_control_0_flr_done	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_control_0_flr_done;$/;"	v
pcie1_cfg_control_0_flr_in_process	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_control_0_flr_in_process;$/;"	v
pcie1_cfg_control_0_hot_reset_in	design_1_wrapper.v	/^  wire pcie1_cfg_control_0_hot_reset_in;$/;"	v
pcie1_cfg_control_0_hot_reset_out	design_1_wrapper.v	/^  wire pcie1_cfg_control_0_hot_reset_out;$/;"	v
pcie1_cfg_control_0_power_state_change_ack	design_1_wrapper.v	/^  wire pcie1_cfg_control_0_power_state_change_ack;$/;"	v
pcie1_cfg_control_0_power_state_change_interrupt	design_1_wrapper.v	/^  wire pcie1_cfg_control_0_power_state_change_interrupt;$/;"	v
pcie1_cfg_ext_0_function_number	design_1_wrapper.v	/^  wire [7:0]pcie1_cfg_ext_0_function_number;$/;"	v
pcie1_cfg_ext_0_read_data	design_1_wrapper.v	/^  wire [31:0]pcie1_cfg_ext_0_read_data;$/;"	v
pcie1_cfg_ext_0_read_data_valid	design_1_wrapper.v	/^  wire pcie1_cfg_ext_0_read_data_valid;$/;"	v
pcie1_cfg_ext_0_read_received	design_1_wrapper.v	/^  wire pcie1_cfg_ext_0_read_received;$/;"	v
pcie1_cfg_ext_0_register_number	design_1_wrapper.v	/^  wire [9:0]pcie1_cfg_ext_0_register_number;$/;"	v
pcie1_cfg_ext_0_write_byte_enable	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_ext_0_write_byte_enable;$/;"	v
pcie1_cfg_ext_0_write_data	design_1_wrapper.v	/^  wire [31:0]pcie1_cfg_ext_0_write_data;$/;"	v
pcie1_cfg_ext_0_write_received	design_1_wrapper.v	/^  wire pcie1_cfg_ext_0_write_received;$/;"	v
pcie1_cfg_ext_tag_enable_0	design_1_wrapper.v	/^  wire pcie1_cfg_ext_tag_enable_0;$/;"	v
pcie1_cfg_fc_cpld_0	design_1_wrapper.v	/^  wire [11:0]pcie1_cfg_fc_cpld_0;$/;"	v
pcie1_cfg_fc_cpld_scale_0	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_fc_cpld_scale_0;$/;"	v
pcie1_cfg_fc_cplh_0	design_1_wrapper.v	/^  wire [7:0]pcie1_cfg_fc_cplh_0;$/;"	v
pcie1_cfg_fc_cplh_scale_0	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_fc_cplh_scale_0;$/;"	v
pcie1_cfg_fc_npd_0	design_1_wrapper.v	/^  wire [11:0]pcie1_cfg_fc_npd_0;$/;"	v
pcie1_cfg_fc_npd_scale_0	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_fc_npd_scale_0;$/;"	v
pcie1_cfg_fc_nph_0	design_1_wrapper.v	/^  wire [7:0]pcie1_cfg_fc_nph_0;$/;"	v
pcie1_cfg_fc_nph_scale_0	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_fc_nph_scale_0;$/;"	v
pcie1_cfg_fc_pd_0	design_1_wrapper.v	/^  wire [11:0]pcie1_cfg_fc_pd_0;$/;"	v
pcie1_cfg_fc_pd_scale_0	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_fc_pd_scale_0;$/;"	v
pcie1_cfg_fc_ph_0	design_1_wrapper.v	/^  wire [7:0]pcie1_cfg_fc_ph_0;$/;"	v
pcie1_cfg_fc_ph_scale_0	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_fc_ph_scale_0;$/;"	v
pcie1_cfg_fc_sel_0	design_1_wrapper.v	/^  wire [2:0]pcie1_cfg_fc_sel_0;$/;"	v
pcie1_cfg_fc_vc_sel_0	design_1_wrapper.v	/^  wire pcie1_cfg_fc_vc_sel_0;$/;"	v
pcie1_cfg_interrupt_0_intx_vector	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_interrupt_0_intx_vector;$/;"	v
pcie1_cfg_interrupt_0_pending	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_interrupt_0_pending;$/;"	v
pcie1_cfg_interrupt_0_sent	design_1_wrapper.v	/^  wire pcie1_cfg_interrupt_0_sent;$/;"	v
pcie1_cfg_mgmt_0_addr	design_1_wrapper.v	/^  wire [9:0]pcie1_cfg_mgmt_0_addr;$/;"	v
pcie1_cfg_mgmt_0_byte_en	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_mgmt_0_byte_en;$/;"	v
pcie1_cfg_mgmt_0_debug_access	design_1_wrapper.v	/^  wire pcie1_cfg_mgmt_0_debug_access;$/;"	v
pcie1_cfg_mgmt_0_function_number	design_1_wrapper.v	/^  wire [7:0]pcie1_cfg_mgmt_0_function_number;$/;"	v
pcie1_cfg_mgmt_0_read_data	design_1_wrapper.v	/^  wire [31:0]pcie1_cfg_mgmt_0_read_data;$/;"	v
pcie1_cfg_mgmt_0_read_en	design_1_wrapper.v	/^  wire pcie1_cfg_mgmt_0_read_en;$/;"	v
pcie1_cfg_mgmt_0_read_write_done	design_1_wrapper.v	/^  wire pcie1_cfg_mgmt_0_read_write_done;$/;"	v
pcie1_cfg_mgmt_0_write_data	design_1_wrapper.v	/^  wire [31:0]pcie1_cfg_mgmt_0_write_data;$/;"	v
pcie1_cfg_mgmt_0_write_en	design_1_wrapper.v	/^  wire pcie1_cfg_mgmt_0_write_en;$/;"	v
pcie1_cfg_msg_recd_0_recd	design_1_wrapper.v	/^  wire pcie1_cfg_msg_recd_0_recd;$/;"	v
pcie1_cfg_msg_recd_0_recd_data	design_1_wrapper.v	/^  wire [7:0]pcie1_cfg_msg_recd_0_recd_data;$/;"	v
pcie1_cfg_msg_recd_0_recd_type	design_1_wrapper.v	/^  wire [4:0]pcie1_cfg_msg_recd_0_recd_type;$/;"	v
pcie1_cfg_msix_0_attr	design_1_wrapper.v	/^  wire [2:0]pcie1_cfg_msix_0_attr;$/;"	v
pcie1_cfg_msix_0_enable	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_msix_0_enable;$/;"	v
pcie1_cfg_msix_0_fail	design_1_wrapper.v	/^  wire pcie1_cfg_msix_0_fail;$/;"	v
pcie1_cfg_msix_0_int_vector	design_1_wrapper.v	/^  wire pcie1_cfg_msix_0_int_vector;$/;"	v
pcie1_cfg_msix_0_mask	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_msix_0_mask;$/;"	v
pcie1_cfg_msix_0_sent	design_1_wrapper.v	/^  wire pcie1_cfg_msix_0_sent;$/;"	v
pcie1_cfg_msix_0_tph_present	design_1_wrapper.v	/^  wire pcie1_cfg_msix_0_tph_present;$/;"	v
pcie1_cfg_msix_0_tph_st_tag	design_1_wrapper.v	/^  wire [7:0]pcie1_cfg_msix_0_tph_st_tag;$/;"	v
pcie1_cfg_msix_0_tph_type	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_msix_0_tph_type;$/;"	v
pcie1_cfg_msix_0_vec_pending	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_msix_0_vec_pending;$/;"	v
pcie1_cfg_msix_0_vec_pending_status	design_1_wrapper.v	/^  wire pcie1_cfg_msix_0_vec_pending_status;$/;"	v
pcie1_cfg_msix_function_number_0	design_1_wrapper.v	/^  wire [7:0]pcie1_cfg_msix_function_number_0;$/;"	v
pcie1_cfg_msix_mint_vector_0	design_1_wrapper.v	/^  \/\/wire [31:0]pcie1_cfg_msix_mint_vector_0;$/;"	v
pcie1_cfg_status_0_cq_np_req	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_status_0_cq_np_req;$/;"	v
pcie1_cfg_status_0_cq_np_req_count	design_1_wrapper.v	/^  wire [5:0]pcie1_cfg_status_0_cq_np_req_count;$/;"	v
pcie1_cfg_status_0_current_speed	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_status_0_current_speed;$/;"	v
pcie1_cfg_status_0_err_cor_out	design_1_wrapper.v	/^  wire pcie1_cfg_status_0_err_cor_out;$/;"	v
pcie1_cfg_status_0_err_fatal_out	design_1_wrapper.v	/^  wire pcie1_cfg_status_0_err_fatal_out;$/;"	v
pcie1_cfg_status_0_err_nonfatal_out	design_1_wrapper.v	/^  wire pcie1_cfg_status_0_err_nonfatal_out;$/;"	v
pcie1_cfg_status_0_function_power_state	design_1_wrapper.v	/^  wire [11:0]pcie1_cfg_status_0_function_power_state;$/;"	v
pcie1_cfg_status_0_function_status	design_1_wrapper.v	/^  wire [15:0]pcie1_cfg_status_0_function_status;$/;"	v
pcie1_cfg_status_0_link_power_state	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_status_0_link_power_state;$/;"	v
pcie1_cfg_status_0_local_error_out	design_1_wrapper.v	/^  wire [4:0]pcie1_cfg_status_0_local_error_out;$/;"	v
pcie1_cfg_status_0_local_error_valid	design_1_wrapper.v	/^  wire pcie1_cfg_status_0_local_error_valid;$/;"	v
pcie1_cfg_status_0_ltssm_state	design_1_wrapper.v	/^  wire [5:0]pcie1_cfg_status_0_ltssm_state;$/;"	v
pcie1_cfg_status_0_max_payload	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_status_0_max_payload;$/;"	v
pcie1_cfg_status_0_max_read_req	design_1_wrapper.v	/^  wire [2:0]pcie1_cfg_status_0_max_read_req;$/;"	v
pcie1_cfg_status_0_negotiated_width	design_1_wrapper.v	/^  wire [2:0]pcie1_cfg_status_0_negotiated_width;$/;"	v
pcie1_cfg_status_0_phy_link_down	design_1_wrapper.v	/^  wire pcie1_cfg_status_0_phy_link_down;$/;"	v
pcie1_cfg_status_0_phy_link_status	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_status_0_phy_link_status;$/;"	v
pcie1_cfg_status_0_pl_status_change	design_1_wrapper.v	/^  wire pcie1_cfg_status_0_pl_status_change;$/;"	v
pcie1_cfg_status_0_rcb_status	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_status_0_rcb_status;$/;"	v
pcie1_cfg_status_0_rq_seq_num0	design_1_wrapper.v	/^  wire [5:0]pcie1_cfg_status_0_rq_seq_num0;$/;"	v
pcie1_cfg_status_0_rq_seq_num1	design_1_wrapper.v	/^  wire [5:0]pcie1_cfg_status_0_rq_seq_num1;$/;"	v
pcie1_cfg_status_0_rq_seq_num_vld	design_1_wrapper.v	/^  \/\/wire [3:0]pcie1_cfg_status_0_rq_seq_num_vld;$/;"	v
pcie1_cfg_status_0_rq_seq_num_vld0	design_1_wrapper.v	/^  wire pcie1_cfg_status_0_rq_seq_num_vld0;$/;"	v
pcie1_cfg_status_0_rq_seq_num_vld1	design_1_wrapper.v	/^  wire pcie1_cfg_status_0_rq_seq_num_vld1;$/;"	v
pcie1_cfg_status_0_rq_seq_num_vld2	design_1_wrapper.v	/^  wire pcie1_cfg_status_0_rq_seq_num_vld2;$/;"	v
pcie1_cfg_status_0_rq_seq_num_vld3	design_1_wrapper.v	/^  wire pcie1_cfg_status_0_rq_seq_num_vld3;$/;"	v
pcie1_cfg_status_0_rq_tag0	design_1_wrapper.v	/^  wire [9:0]pcie1_cfg_status_0_rq_tag0;$/;"	v
pcie1_cfg_status_0_rq_tag1	design_1_wrapper.v	/^  wire [9:0]pcie1_cfg_status_0_rq_tag1;$/;"	v
pcie1_cfg_status_0_rq_tag_av	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_status_0_rq_tag_av;$/;"	v
pcie1_cfg_status_0_rq_tag_vld0	design_1_wrapper.v	/^  wire pcie1_cfg_status_0_rq_tag_vld0;$/;"	v
pcie1_cfg_status_0_rq_tag_vld1	design_1_wrapper.v	/^  wire pcie1_cfg_status_0_rq_tag_vld1;$/;"	v
pcie1_cfg_status_0_rx_pm_state	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_status_0_rx_pm_state;$/;"	v
pcie1_cfg_status_0_tph_requester_enable	design_1_wrapper.v	/^  wire [3:0]pcie1_cfg_status_0_tph_requester_enable;$/;"	v
pcie1_cfg_status_0_tph_st_mode	design_1_wrapper.v	/^  wire [11:0]pcie1_cfg_status_0_tph_st_mode;$/;"	v
pcie1_cfg_status_0_tx_pm_state	design_1_wrapper.v	/^  wire [1:0]pcie1_cfg_status_0_tx_pm_state;$/;"	v
pcie1_m_axis_cq_0_tdata	design_1_wrapper.v	/^  wire [C_DATA_WIDTH-1:0]pcie1_m_axis_cq_0_tdata;$/;"	v
pcie1_m_axis_cq_0_tkeep	design_1_wrapper.v	/^  wire [KEEP_WIDTH-1:0]pcie1_m_axis_cq_0_tkeep;$/;"	v
pcie1_m_axis_cq_0_tlast	design_1_wrapper.v	/^  wire pcie1_m_axis_cq_0_tlast;$/;"	v
pcie1_m_axis_cq_0_tready	design_1_wrapper.v	/^  wire pcie1_m_axis_cq_0_tready;$/;"	v
pcie1_m_axis_cq_0_tuser	design_1_wrapper.v	/^  wire [AXI4_CQ_TUSER_WIDTH-1:0]pcie1_m_axis_cq_0_tuser;$/;"	v
pcie1_m_axis_cq_0_tvalid	design_1_wrapper.v	/^  wire pcie1_m_axis_cq_0_tvalid;$/;"	v
pcie1_m_axis_rc_0_tdata	design_1_wrapper.v	/^  wire [C_DATA_WIDTH-1:0]pcie1_m_axis_rc_0_tdata;$/;"	v
pcie1_m_axis_rc_0_tkeep	design_1_wrapper.v	/^  wire [KEEP_WIDTH-115:0]pcie1_m_axis_rc_0_tkeep;$/;"	v
pcie1_m_axis_rc_0_tlast	design_1_wrapper.v	/^  wire pcie1_m_axis_rc_0_tlast;$/;"	v
pcie1_m_axis_rc_0_tready	design_1_wrapper.v	/^  wire pcie1_m_axis_rc_0_tready;$/;"	v
pcie1_m_axis_rc_0_tuser	design_1_wrapper.v	/^  wire [AXI4_RC_TUSER_WIDTH-1:0]pcie1_m_axis_rc_0_tuser;$/;"	v
pcie1_m_axis_rc_0_tvalid	design_1_wrapper.v	/^  wire pcie1_m_axis_rc_0_tvalid;$/;"	v
pcie1_s_axis_cc_0_tdata	design_1_wrapper.v	/^  wire [C_DATA_WIDTH-1:0]pcie1_s_axis_cc_0_tdata;$/;"	v
pcie1_s_axis_cc_0_tkeep	design_1_wrapper.v	/^  wire [KEEP_WIDTH-115:0]pcie1_s_axis_cc_0_tkeep;$/;"	v
pcie1_s_axis_cc_0_tlast	design_1_wrapper.v	/^  wire pcie1_s_axis_cc_0_tlast;$/;"	v
pcie1_s_axis_cc_0_tready	design_1_wrapper.v	/^  wire [3:0]pcie1_s_axis_cc_0_tready;$/;"	v
pcie1_s_axis_cc_0_tuser	design_1_wrapper.v	/^  wire [AXI4_CC_TUSER_WIDTH-1:0]pcie1_s_axis_cc_0_tuser;$/;"	v
pcie1_s_axis_cc_0_tvalid	design_1_wrapper.v	/^  wire pcie1_s_axis_cc_0_tvalid;$/;"	v
pcie1_s_axis_rq_0_tdata	design_1_wrapper.v	/^  wire [C_DATA_WIDTH-1:0]pcie1_s_axis_rq_0_tdata;$/;"	v
pcie1_s_axis_rq_0_tkeep	design_1_wrapper.v	/^  wire [KEEP_WIDTH-115:0]pcie1_s_axis_rq_0_tkeep;$/;"	v
pcie1_s_axis_rq_0_tlast	design_1_wrapper.v	/^  wire pcie1_s_axis_rq_0_tlast;$/;"	v
pcie1_s_axis_rq_0_tready	design_1_wrapper.v	/^  wire [3:0]pcie1_s_axis_rq_0_tready;$/;"	v
pcie1_s_axis_rq_0_tuser	design_1_wrapper.v	/^  wire [AXI4_RQ_TUSER_WIDTH-1:0]pcie1_s_axis_rq_0_tuser;$/;"	v
pcie1_s_axis_rq_0_tvalid	design_1_wrapper.v	/^  wire pcie1_s_axis_rq_0_tvalid;$/;"	v
pcie1_transmit_fc_0_npd_av	design_1_wrapper.v	/^  wire [3:0]pcie1_transmit_fc_0_npd_av;$/;"	v
pcie1_transmit_fc_0_nph_av	design_1_wrapper.v	/^  wire [3:0]pcie1_transmit_fc_0_nph_av;$/;"	v
pcie1_user_clk_0	design_1_wrapper.v	/^  wire pcie1_user_clk_0;$/;"	v
pcie1_user_lnk_up_0	design_1_wrapper.v	/^  wire pcie1_user_lnk_up_0;$/;"	v
pcie1_user_reset_0	design_1_wrapper.v	/^  wire pcie1_user_reset_0;$/;"	v
pcie_app_versal_bmd	pcie_app_uscale_bmd_1024.sv	/^module  pcie_app_versal_bmd #($/;"	m
pcie_cq_np_req	BMD_AXIST_1024.sv	/^   output logic                     pcie_cq_np_req,$/;"	v
pcie_cq_np_req	BMD_AXIST_CQ_512.sv	/^   output logic                     pcie_cq_np_req,$/;"	v
pcie_cq_np_req	BMD_AXIST_EP_1024.sv	/^   output logic                     pcie_cq_np_req,$/;"	v
pcie_cq_np_req	pcie_app_uscale_bmd_1024.sv	/^   output logic                     pcie_cq_np_req,$/;"	v
pre_wr_data	BMD_AXIST_EP_MEM_ACCESS.v	/^   reg [31:0] 		pre_wr_data;$/;"	v
prev_gen_leg_intr_rd	BMD_AXIST_EP_1024.sv	/^   \/\/logic                            prev_gen_leg_intr_rd;$/;"	v
prev_gen_leg_intr_wr	BMD_AXIST_EP_1024.sv	/^   \/\/logic                            prev_gen_leg_intr_wr;$/;"	v
r_keep	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) reg r_keep = 1'b1; \/\/deassertion of r_keep allows request to trigger new interrupt$/;"	v
r_rd_done	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) reg r_rd_done, r_wr_done;$/;"	v
r_rd_done_edge	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) reg r_rd_done_edge, r_wr_done_edge;$/;"	v
r_tcnt	BMD_AXIST_RQ_RW_1024.sv	/^   (*mark_debug*)logic [15:0]   r_tcnt, r_tcnt_w; $/;"	v
rc_tready_cnt	BMD_AXIST_EP_1024.sv	/^\/\/   logic [2:0] rc_tready_cnt;$/;"	v
rd_addr	BMD_AXIST_CC_512.sv	/^   output logic [10:0]              rd_addr,$/;"	v
rd_addr	BMD_AXIST_EP_1024.sv	/^   logic [10:0]                     rd_addr;$/;"	v
rd_addr_31_2_0	BMD_AXIST_RQ_RW_1024.sv	/^   (*mark_debug*)logic [29:0]   rd_addr_31_2_0, rd_addr_31_2_1, rd_addr_31_2_2, rd_addr_31_2_3;$/;"	v
rd_be	BMD_AXIST_CC_512.sv	/^   output logic [3:0]               rd_be,$/;"	v
rd_be	BMD_AXIST_EP_1024.sv	/^   logic [3:0]                      rd_be;$/;"	v
rd_d_o	BMD_AXIST_EP_MEM.v	/^   reg [31:0] 	    rd_d_o;$/;"	v
rd_data	BMD_AXIST_EP_1024.sv	/^   logic [31:0]                     rd_data;$/;"	v
rd_data_reg	BMD_AXIST_CC_512.sv	/^   logic [31:0]   rd_data_reg;   \/\/ To Store the 1st rd_data in case of 2DW payload$/;"	v
rd_done_edge	BMD_AXIST_INTR_CTRL.v	/^  (*mark_debug*) wire rd_done_edge, wr_done_edge;$/;"	v
rd_metering	BMD_AXIST_EP_1024.sv	/^   logic                            rd_metering;$/;"	v
rd_metering_o	BMD_AXIST_EP_MEM.v	/^   reg 				rd_metering_o;$/;"	v
region_select	BMD_AXIST_CQ_512.sv	/^   logic [1:0]    region_select;$/;"	v
req_addr	BMD_AXIST_CQ_512.sv	/^   output logic [12:0]              req_addr,           \/\/ Memory Read Address$/;"	v
req_addr	BMD_AXIST_EP_1024.sv	/^   logic [12:0]                     req_addr;$/;"	v
req_at	BMD_AXIST_CQ_512.sv	/^   output logic [1:0]               req_at,             \/\/ Address Translation$/;"	v
req_at	BMD_AXIST_EP_1024.sv	/^   logic [1:0]                      req_at;$/;"	v
req_attr	BMD_AXIST_CQ_512.sv	/^   output logic [2:0]               req_attr,           \/\/ Memory Read Attribute$/;"	v
req_attr	BMD_AXIST_EP_1024.sv	/^   logic [2:0]                      req_attr;$/;"	v
req_be	BMD_AXIST_CQ_512.sv	/^   output logic [7:0]               req_be,             \/\/ Memory Read Byte Enables$/;"	v
req_be	BMD_AXIST_EP_1024.sv	/^   logic [7:0]                      req_be;$/;"	v
req_compl	BMD_AXIST_CQ_512.sv	/^   output logic                     req_compl,$/;"	v
req_compl	BMD_AXIST_EP_1024.sv	/^   logic                            req_compl;$/;"	v
req_compl_q	BMD_AXIST_CC_512.sv	/^   logic          req_compl_q, req_compl_qq;$/;"	v
req_compl_ur	BMD_AXIST_CQ_512.sv	/^   output logic                     req_compl_ur,$/;"	v
req_compl_ur	BMD_AXIST_EP_1024.sv	/^   logic                            req_compl_ur;$/;"	v
req_compl_ur_q	BMD_AXIST_CC_512.sv	/^   logic          req_compl_ur_q, req_compl_ur_qq;$/;"	v
req_compl_wd	BMD_AXIST_CQ_512.sv	/^   output logic                     req_compl_wd,$/;"	v
req_compl_wd	BMD_AXIST_EP_1024.sv	/^   logic                            req_compl_wd;$/;"	v
req_compl_wd_q	BMD_AXIST_CC_512.sv	/^   logic          req_compl_wd_q, req_compl_wd_qq;$/;"	v
req_completion	BMD_AXIST_1024.sv	/^   logic                            req_completion;$/;"	v
req_completion	BMD_AXIST_EP_1024.sv	/^   output logic                     req_completion,$/;"	v
req_des_qword0	BMD_AXIST_CQ_512.sv	/^   output logic [63:0]              req_des_qword0,     \/\/ DWord0 and Dword1 of descriptor of the request$/;"	v
req_des_qword0	BMD_AXIST_EP_1024.sv	/^   logic [63:0]                     req_des_qword0;$/;"	v
req_des_qword1	BMD_AXIST_CQ_512.sv	/^   output logic [63:0]              req_des_qword1,     \/\/ DWord2 and Dword3 of descriptor of the request$/;"	v
req_des_qword1	BMD_AXIST_EP_1024.sv	/^   logic [63:0]                     req_des_qword1;$/;"	v
req_des_tph_present	BMD_AXIST_CQ_512.sv	/^   output logic                     req_des_tph_present,\/\/ TPH Present in the request$/;"	v
req_des_tph_present	BMD_AXIST_EP_1024.sv	/^   logic                            req_des_tph_present;$/;"	v
req_des_tph_st_tag	BMD_AXIST_CQ_512.sv	/^   output logic [7:0]               req_des_tph_st_tag, \/\/ TPH Steering tag of the request$/;"	v
req_des_tph_st_tag	BMD_AXIST_EP_1024.sv	/^   logic [7:0]                      req_des_tph_st_tag;$/;"	v
req_des_tph_type	BMD_AXIST_CQ_512.sv	/^   output logic [1:0]               req_des_tph_type,   \/\/ If TPH Present then TPH type$/;"	v
req_des_tph_type	BMD_AXIST_EP_1024.sv	/^   logic [1:0]                      req_des_tph_type;$/;"	v
req_ep	BMD_AXIST_EP_1024.sv	/^   logic                            req_ep;$/;"	v
req_len	BMD_AXIST_CQ_512.sv	/^   output logic [10:0]              req_len,            \/\/ Memory Read Length$/;"	v
req_len	BMD_AXIST_EP_1024.sv	/^   logic [10:0]                     req_len;$/;"	v
req_mem	BMD_AXIST_CQ_512.sv	/^   output logic                     req_mem,$/;"	v
req_mem	BMD_AXIST_EP_1024.sv	/^   logic                            req_mem;$/;"	v
req_mem_lock	BMD_AXIST_CQ_512.sv	/^   output logic                     req_mem_lock,$/;"	v
req_mem_lock	BMD_AXIST_EP_1024.sv	/^   logic                            req_mem_lock;$/;"	v
req_parity_err	BMD_AXIST_CQ_512.sv	/^   output logic                     req_parity_err      \/\/ Parity error$/;"	v
req_parity_err	BMD_AXIST_EP_1024.sv	/^   logic                            req_parity_err;$/;"	v
req_rid	BMD_AXIST_CQ_512.sv	/^   output logic [15:0]              req_rid,            \/\/ Memory Read Requestor ID { 8'b0 (Bus no),$/;"	v
req_rid	BMD_AXIST_EP_1024.sv	/^   logic [15:0]                     req_rid;$/;"	v
req_tag	BMD_AXIST_CQ_512.sv	/^   output logic [7:0]               req_tag,            \/\/ Memory Read Tag$/;"	v
req_tag	BMD_AXIST_EP_1024.sv	/^   logic [7:0]                      req_tag;$/;"	v
req_tc	BMD_AXIST_CQ_512.sv	/^   output logic [2:0]               req_tc,             \/\/ Memory Read TC$/;"	v
req_tc	BMD_AXIST_EP_1024.sv	/^   logic [2:0]                      req_tc;$/;"	v
req_td	BMD_AXIST_EP_1024.sv	/^   logic                            req_td;$/;"	v
rq_done	BMD_AXIST_RQ_RW_1024.sv	/^   (*mark_debug*)logic          rq_done,   rq_done_w;$/;"	v
s_axis_cc_parity	BMD_AXIST_CC_512.sv	/^   logic [63:0]   s_axis_cc_parity;$/;"	v
s_axis_cc_tdata	BMD_AXIST_1024.sv	/^   output logic [C_DATA_WIDTH-1:0]        s_axis_cc_tdata,$/;"	v
s_axis_cc_tdata	BMD_AXIST_CC_512.sv	/^   output logic [511:0]             s_axis_cc_tdata,$/;"	v
s_axis_cc_tdata	BMD_AXIST_EP_1024.sv	/^   output logic [C_DATA_WIDTH-1:0]        s_axis_cc_tdata,$/;"	v
s_axis_cc_tdata	pcie_app_uscale_bmd_1024.sv	/^   output logic [C_DATA_WIDTH-1:0]        s_axis_cc_tdata,$/;"	v
s_axis_cc_tdata_512_int	BMD_AXIST_EP_1024.sv	/^   logic [511:0]        s_axis_cc_tdata_512_int;$/;"	v
s_axis_cc_tdata_wire	BMD_AXIST_CC_512.sv	/^   logic [511:0]  s_axis_cc_tdata_wire;$/;"	v
s_axis_cc_tkeep	BMD_AXIST_1024.sv	/^   output logic [KEEP_WIDTH-1:0]          s_axis_cc_tkeep,$/;"	v
s_axis_cc_tkeep	BMD_AXIST_CC_512.sv	/^   output logic [15:0]              s_axis_cc_tkeep,$/;"	v
s_axis_cc_tkeep	BMD_AXIST_EP_1024.sv	/^   output logic [KEEP_WIDTH-1:0]          s_axis_cc_tkeep,$/;"	v
s_axis_cc_tkeep	pcie_app_uscale_bmd_1024.sv	/^   output logic [KEEP_WIDTH-1:0]          s_axis_cc_tkeep,$/;"	v
s_axis_cc_tkeep_512_int	BMD_AXIST_EP_1024.sv	/^   logic [15:0]         s_axis_cc_tkeep_512_int;$/;"	v
s_axis_cc_tlast	BMD_AXIST_1024.sv	/^   output logic                           s_axis_cc_tlast,$/;"	v
s_axis_cc_tlast	BMD_AXIST_CC_512.sv	/^   output logic                     s_axis_cc_tlast,$/;"	v
s_axis_cc_tlast	BMD_AXIST_EP_1024.sv	/^   output logic                           s_axis_cc_tlast,$/;"	v
s_axis_cc_tlast	pcie_app_uscale_bmd_1024.sv	/^   output logic                           s_axis_cc_tlast,$/;"	v
s_axis_cc_tuser	BMD_AXIST_1024.sv	/^   output logic [AXI4_CC_TUSER_WIDTH-1:0] s_axis_cc_tuser,$/;"	v
s_axis_cc_tuser	BMD_AXIST_CC_512.sv	/^   output logic [80:0]              s_axis_cc_tuser,$/;"	v
s_axis_cc_tuser	BMD_AXIST_EP_1024.sv	/^   output logic [AXI4_CC_TUSER_WIDTH-1:0] s_axis_cc_tuser,$/;"	v
s_axis_cc_tuser	pcie_app_uscale_bmd_1024.sv	/^   output logic [AXI4_CC_TUSER_WIDTH-1:0] s_axis_cc_tuser,$/;"	v
s_axis_cc_tvalid	BMD_AXIST_1024.sv	/^   output logic                           s_axis_cc_tvalid,$/;"	v
s_axis_cc_tvalid	BMD_AXIST_CC_512.sv	/^   output logic                     s_axis_cc_tvalid,$/;"	v
s_axis_cc_tvalid	BMD_AXIST_EP_1024.sv	/^   output logic                           s_axis_cc_tvalid,$/;"	v
s_axis_cc_tvalid	pcie_app_uscale_bmd_1024.sv	/^   output logic                           s_axis_cc_tvalid,$/;"	v
s_axis_rq_parity	BMD_AXIST_RQ_RW_1024.sv	/^   logic [63:0]   s_axis_rq_parity; \/\/ TODO$/;"	v
s_axis_rq_tdata	BMD_AXIST_1024.sv	/^   output logic [C_DATA_WIDTH-1:0]        s_axis_rq_tdata,$/;"	v
s_axis_rq_tdata	BMD_AXIST_EP_1024.sv	/^   output logic [C_DATA_WIDTH-1:0]        s_axis_rq_tdata,$/;"	v
s_axis_rq_tdata	BMD_AXIST_RQ_1024.sv	/^   (*mark_debug*)output logic [C_DATA_WIDTH-1:0]        s_axis_rq_tdata,$/;"	v
s_axis_rq_tdata	BMD_AXIST_RQ_RW_1024.sv	/^  ,output logic [C_DATA_WIDTH-1:0]        s_axis_rq_tdata$/;"	v
s_axis_rq_tdata	pcie_app_uscale_bmd_1024.sv	/^   output logic [C_DATA_WIDTH-1:0]        s_axis_rq_tdata,$/;"	v
s_axis_rq_tkeep	BMD_AXIST_1024.sv	/^   output logic [KEEP_WIDTH-1:0]          s_axis_rq_tkeep,$/;"	v
s_axis_rq_tkeep	BMD_AXIST_EP_1024.sv	/^   output logic [KEEP_WIDTH-1:0]          s_axis_rq_tkeep,$/;"	v
s_axis_rq_tkeep	BMD_AXIST_RQ_1024.sv	/^   (*mark_debug*)output logic [KEEP_WIDTH-1:0]          s_axis_rq_tkeep,$/;"	v
s_axis_rq_tkeep	BMD_AXIST_RQ_RW_1024.sv	/^  ,output logic [KEEP_WIDTH-1:0]          s_axis_rq_tkeep$/;"	v
s_axis_rq_tkeep	pcie_app_uscale_bmd_1024.sv	/^   output logic [KEEP_WIDTH-1:0]          s_axis_rq_tkeep,$/;"	v
s_axis_rq_tkeep_r	BMD_AXIST_RQ_1024.sv	/^   \/\/logic [15:0]   s_axis_rq_tkeep_r;$/;"	v
s_axis_rq_tkeep_w	BMD_AXIST_RQ_1024.sv	/^   \/\/logic [15:0]   s_axis_rq_tkeep_w;$/;"	v
s_axis_rq_tkeep_w	BMD_AXIST_RQ_RW_1024.sv	/^   logic [KEEP_WIDTH-1:0]  s_axis_rq_tkeep_w;$/;"	v
s_axis_rq_tlast	BMD_AXIST_1024.sv	/^   output logic                           s_axis_rq_tlast,$/;"	v
s_axis_rq_tlast	BMD_AXIST_EP_1024.sv	/^   output logic                           s_axis_rq_tlast,$/;"	v
s_axis_rq_tlast	BMD_AXIST_RQ_1024.sv	/^   (*mark_debug*) output logic                           s_axis_rq_tlast,$/;"	v
s_axis_rq_tlast	BMD_AXIST_RQ_RW_1024.sv	/^  ,output logic                           s_axis_rq_tlast$/;"	v
s_axis_rq_tlast	pcie_app_uscale_bmd_1024.sv	/^   output logic                           s_axis_rq_tlast,$/;"	v
s_axis_rq_tlast_r	BMD_AXIST_RQ_1024.sv	/^   \/\/logic          s_axis_rq_tlast_r;$/;"	v
s_axis_rq_tlast_w	BMD_AXIST_RQ_1024.sv	/^   \/\/logic          s_axis_rq_tlast_w;$/;"	v
s_axis_rq_tlast_w	BMD_AXIST_RQ_RW_1024.sv	/^   logic                   s_axis_rq_tlast_w;$/;"	v
s_axis_rq_tready_r	BMD_AXIST_RQ_1024.sv	/^   \/\/logic          s_axis_rq_tready_r;$/;"	v
s_axis_rq_tready_w	BMD_AXIST_RQ_1024.sv	/^   \/\/logic          s_axis_rq_tready_w;$/;"	v
s_axis_rq_tuser	BMD_AXIST_1024.sv	/^   output logic [AXI4_RQ_TUSER_WIDTH-1:0] s_axis_rq_tuser,$/;"	v
s_axis_rq_tuser	BMD_AXIST_EP_1024.sv	/^   output logic [AXI4_RQ_TUSER_WIDTH-1:0] s_axis_rq_tuser,$/;"	v
s_axis_rq_tuser	BMD_AXIST_RQ_1024.sv	/^   (*mark_debug*)output logic [AXI4_RQ_TUSER_WIDTH-1:0] s_axis_rq_tuser,$/;"	v
s_axis_rq_tuser	BMD_AXIST_RQ_RW_1024.sv	/^  ,output logic [AXI4_RQ_TUSER_WIDTH-1:0] s_axis_rq_tuser$/;"	v
s_axis_rq_tuser	pcie_app_uscale_bmd_1024.sv	/^   output logic [AXI4_RQ_TUSER_WIDTH-1:0] s_axis_rq_tuser,$/;"	v
s_axis_rq_tuser_seq_num	BMD_AXIST_RQ_1024.sv	/^   logic [5:0]                       s_axis_rq_tuser_seq_num;$/;"	v
s_axis_rq_tvalid	BMD_AXIST_1024.sv	/^   output logic                           s_axis_rq_tvalid,$/;"	v
s_axis_rq_tvalid	BMD_AXIST_EP_1024.sv	/^   output logic                           s_axis_rq_tvalid,$/;"	v
s_axis_rq_tvalid	BMD_AXIST_RQ_1024.sv	/^   (*mark_debug*)output logic                           s_axis_rq_tvalid,$/;"	v
s_axis_rq_tvalid	BMD_AXIST_RQ_RW_1024.sv	/^  ,output logic                           s_axis_rq_tvalid$/;"	v
s_axis_rq_tvalid	pcie_app_uscale_bmd_1024.sv	/^   output logic                           s_axis_rq_tvalid,$/;"	v
s_axis_rq_tvalid_r	BMD_AXIST_RQ_1024.sv	/^   \/\/logic          s_axis_rq_tvalid_r;$/;"	v
s_axis_rq_tvalid_w	BMD_AXIST_RQ_1024.sv	/^   \/\/logic          s_axis_rq_tvalid_w;$/;"	v
s_axis_rq_tvalid_w	BMD_AXIST_RQ_RW_1024.sv	/^   logic                   s_axis_rq_tvalid_w;$/;"	v
send_leg_intr	BMD_AXIST_EP_1024.sv	/^   \/\/logic                            send_leg_intr;$/;"	v
send_msi_intr	BMD_AXIST_EP_1024.sv	/^   \/\/logic                            send_msi_intr;$/;"	v
seq_num_all_back	BMD_AXIST_RQ_1024.sv	/^   logic    seq_num_all_back;$/;"	v
seq_num_assigned_0	BMD_AXIST_RQ_1024.sv	/^   logic                             seq_num_assigned_0;$/;"	v
seq_num_assigned_0	BMD_AXIST_RQ_RW_1024.sv	/^  ,output logic                           seq_num_assigned_0$/;"	v
seq_num_assigned_1	BMD_AXIST_RQ_1024.sv	/^   logic                             seq_num_assigned_1; $/;"	v
seq_num_assigned_1	BMD_AXIST_RQ_RW_1024.sv	/^  ,output logic                           seq_num_assigned_1$/;"	v
seq_num_assigned_num_0	BMD_AXIST_RQ_1024.sv	/^   logic [RQ_AVAIL_SEQ_NUM_IDX-1:0]  seq_num_assigned_num_0;$/;"	v
seq_num_assigned_num_0_q	BMD_AXIST_RQ_1024.sv	/^   logic [RQ_AVAIL_SEQ_NUM_IDX-1:0]  seq_num_assigned_num_0_q;$/;"	v
seq_num_assigned_num_1	BMD_AXIST_RQ_1024.sv	/^   logic [RQ_AVAIL_SEQ_NUM_IDX-1:0]  seq_num_assigned_num_1; $/;"	v
seq_num_assigned_num_1_q	BMD_AXIST_RQ_1024.sv	/^   logic [RQ_AVAIL_SEQ_NUM_IDX-1:0]  seq_num_assigned_num_1_q; $/;"	v
seq_num_assigned_vec_0	BMD_AXIST_RQ_1024.sv	/^   logic [RQ_AVAIL_SEQ_NUM-1:0]      seq_num_assigned_vec_0;$/;"	v
seq_num_assigned_vec_1	BMD_AXIST_RQ_1024.sv	/^   logic [RQ_AVAIL_SEQ_NUM-1:0]      seq_num_assigned_vec_1;$/;"	v
seq_num_released_vec_0	BMD_AXIST_RQ_1024.sv	/^   logic [RQ_AVAIL_SEQ_NUM-1:0]      seq_num_released_vec_0;$/;"	v
seq_num_released_vec_1	BMD_AXIST_RQ_1024.sv	/^   logic [RQ_AVAIL_SEQ_NUM-1:0]      seq_num_released_vec_1;$/;"	v
sop	BMD_AXIST_CQ_512.sv	/^   logic          sop, sop_wire;$/;"	v
state	BMD_AXIST_CC_512.sv	/^   logic [3:0]    state;$/;"	v
state	BMD_AXIST_CQ_512.sv	/^   logic [7:0]    state;$/;"	v
sys_rst	pcie_app_uscale_bmd_1024.sv	/^   input wire                       sys_rst,$/;"	v
tags_all_back	BMD_AXIST_EP_1024.sv	/^   logic                            tags_all_back;$/;"	v
tags_all_back	BMD_AXIST_RQ_1024.sv	/^   output logic                     tags_all_back,$/;"	v
to	pcie_app_uscale_bmd_1024.sv	/^\/\/ repliced by user logic to perform the actual function level reset as$/;"	v
trn_pending	BMD_AXIST_TO_CTRL.sv	/^   logic                            trn_pending;$/;"	v
trn_sent	BMD_AXIST_EP_1024.sv	/^   logic                            trn_sent;$/;"	v
trn_type	BMD_AXIST_CQ_512.sv	/^   logic [3:0]    trn_type;$/;"	v
trn_wait_count	BMD_AXIST_EP_1024.sv	/^   logic [3:0]                      trn_wait_count;$/;"	v
trn_wait_count	BMD_AXIST_EP_MEM.v	/^   reg [3:0] 	    trn_wait_count;$/;"	v
user_clk	pcie_app_uscale_bmd_1024.sv	/^   input wire                       user_clk,$/;"	v
user_clk_heartbeat	pcie_app_uscale_bmd_1024.sv	/^  reg    [25:0]     user_clk_heartbeat = 26'd0;$/;"	v
user_lnk_up	pcie_app_uscale_bmd_1024.sv	/^   input wire                       user_lnk_up,$/;"	v
user_reset	pcie_app_uscale_bmd_1024.sv	/^   input wire                       user_reset,$/;"	v
user_reset_n	pcie_app_uscale_bmd_1024.sv	/^   logic                            user_reset_n;$/;"	v
version_number	BMD_AXIST_EP_MEM.v	/^   wire [7:0] 	    version_number;$/;"	v
w_pre_wr_data	BMD_AXIST_EP_MEM_ACCESS.v	/^   wire [31:0] 		w_pre_wr_data;$/;"	v
w_pre_wr_data_b0	BMD_AXIST_EP_MEM_ACCESS.v	/^   wire [7:0] 			  w_pre_wr_data_b0 = pre_wr_data[07:00];$/;"	v
w_pre_wr_data_b1	BMD_AXIST_EP_MEM_ACCESS.v	/^   wire [7:0] 			  w_pre_wr_data_b1 = pre_wr_data[15:08];$/;"	v
w_pre_wr_data_b2	BMD_AXIST_EP_MEM_ACCESS.v	/^   wire [7:0] 			  w_pre_wr_data_b2 = pre_wr_data[23:16];$/;"	v
w_pre_wr_data_b3	BMD_AXIST_EP_MEM_ACCESS.v	/^   wire [7:0] 			  w_pre_wr_data_b3 = pre_wr_data[31:24];$/;"	v
w_tcnt	BMD_AXIST_RQ_RW_1024.sv	/^   (*mark_debug*)logic [15:0]   w_tcnt, w_tcnt_w; $/;"	v
w_wr_data_b0	BMD_AXIST_EP_MEM_ACCESS.v	/^   wire [7:0] 			  w_wr_data_b0 = wr_data_i[7:0];$/;"	v
w_wr_data_b1	BMD_AXIST_EP_MEM_ACCESS.v	/^   wire [7:0] 			  w_wr_data_b1 = wr_data_i[15:8];$/;"	v
w_wr_data_b2	BMD_AXIST_EP_MEM_ACCESS.v	/^   wire [7:0] 			  w_wr_data_b2 = wr_data_i[23:16];$/;"	v
w_wr_data_b3	BMD_AXIST_EP_MEM_ACCESS.v	/^   wire [7:0] 			  w_wr_data_b3 = wr_data_i[31:24];$/;"	v
wr_addr	BMD_AXIST_CQ_512.sv	/^   output logic [10:0]              wr_addr,            \/\/ Memory Write Address$/;"	v
wr_addr	BMD_AXIST_EP_1024.sv	/^   logic [10:0]                     wr_addr;$/;"	v
wr_addr_31_2_0	BMD_AXIST_RQ_RW_1024.sv	/^   (*mark_debug*)logic [29:0]   wr_addr_31_2_0, wr_addr_31_2_1, wr_addr_31_2_2, wr_addr_31_2_3;$/;"	v
wr_be	BMD_AXIST_CQ_512.sv	/^   output logic [7:0]               wr_be,              \/\/ Memory Write Byte Enable$/;"	v
wr_be	BMD_AXIST_EP_1024.sv	/^   logic [7:0]                      wr_be;$/;"	v
wr_be_dbg	BMD_AXIST_EP_MEM_ACCESS.v	/^(* mark_debug *) wire  [7:0] wr_be_dbg = wr_be_i;$/;"	v
wr_busy	BMD_AXIST_EP_1024.sv	/^   logic                            wr_busy;$/;"	v
wr_busy_dbg	BMD_AXIST_EP_MEM_ACCESS.v	/^(* mark_debug *) wire        wr_busy_dbg = wr_busy_o;$/;"	v
wr_data	BMD_AXIST_CQ_512.sv	/^   output logic [63:0]              wr_data,            \/\/ Memory Write Data$/;"	v
wr_data	BMD_AXIST_EP_1024.sv	/^   logic [63:0]                     wr_data;$/;"	v
wr_data_dbg	BMD_AXIST_EP_MEM_ACCESS.v	/^(* mark_debug *) wire [31:0] wr_data_dbg = wr_data_i;$/;"	v
wr_en	BMD_AXIST_CQ_512.sv	/^   output logic                     wr_en,              \/\/ Memory Write Enable$/;"	v
wr_en	BMD_AXIST_EP_1024.sv	/^   logic                            wr_en;$/;"	v
wr_en_dbg	BMD_AXIST_EP_MEM_ACCESS.v	/^(* mark_debug *) wire        wr_en_dbg = wr_en_i;$/;"	v
wr_end_case	BMD_AXIST_RQ_RW_1024.sv	/^   logic [1:0]    wr_end_case,  wr_end_case_w;$/;"	v
wr_mem_state	BMD_AXIST_EP_MEM_ACCESS.v	/^   reg [3:0] 		wr_mem_state;  $/;"	v
wr_mem_state_dbg	BMD_AXIST_EP_MEM_ACCESS.v	/^(* mark_debug *) wire  [3:0] wr_mem_state_dbg = wr_mem_state;  $/;"	v
